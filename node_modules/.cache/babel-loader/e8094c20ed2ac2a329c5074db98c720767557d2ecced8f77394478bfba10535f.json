{"ast":null,"code":"import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from './StorageConstants';\nexport var byteLength = function (x) {\n  if (typeof x === 'string') {\n    return x.length;\n  } else if (isArrayBuffer(x)) {\n    return x.byteLength;\n  } else if (isBlob(x)) {\n    return x.size;\n  } else {\n    throw new Error('Cannot determine byte length of ' + x);\n  }\n};\nexport var dispatchStorageEvent = function (track, event, attrs, metrics, message) {\n  if (track) {\n    var data = {\n      attrs: attrs\n    };\n    if (metrics) {\n      data['metrics'] = metrics;\n    }\n    Hub.dispatch('storage', {\n      event: event,\n      data: data,\n      message: message\n    }, 'Storage', AMPLIFY_SYMBOL);\n  }\n};\nexport var isFile = function (x) {\n  return typeof x !== 'undefined' && x instanceof File;\n};\nexport var isBlob = function (x) {\n  return typeof x !== 'undefined' && x instanceof Blob;\n};\nvar isArrayBuffer = function (x) {\n  return typeof x !== 'undefined' && x instanceof ArrayBuffer;\n};","map":{"version":3,"names":["Hub","AMPLIFY_SYMBOL","byteLength","x","length","isArrayBuffer","isBlob","size","Error","dispatchStorageEvent","track","event","attrs","metrics","message","data","dispatch","isFile","File","Blob","ArrayBuffer"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\storage\\src\\common\\StorageUtils.ts"],"sourcesContent":["import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from './StorageConstants';\n\nexport const byteLength = (x: unknown) => {\n\tif (typeof x === 'string') {\n\t\treturn x.length;\n\t} else if (isArrayBuffer(x)) {\n\t\treturn x.byteLength;\n\t} else if (isBlob(x)) {\n\t\treturn x.size;\n\t} else {\n\t\tthrow new Error('Cannot determine byte length of ' + x);\n\t}\n};\n\nexport const dispatchStorageEvent = (\n\ttrack: boolean,\n\tevent: string,\n\tattrs: any,\n\tmetrics: any,\n\tmessage: string\n): void => {\n\tif (track) {\n\t\tconst data = { attrs };\n\t\tif (metrics) {\n\t\t\tdata['metrics'] = metrics;\n\t\t}\n\t\tHub.dispatch(\n\t\t\t'storage',\n\t\t\t{\n\t\t\t\tevent,\n\t\t\t\tdata,\n\t\t\t\tmessage,\n\t\t\t},\n\t\t\t'Storage',\n\t\t\tAMPLIFY_SYMBOL\n\t\t);\n\t}\n};\n\nexport const isFile = (x: unknown): x is File => {\n\treturn typeof x !== 'undefined' && x instanceof File;\n};\n\nexport const isBlob = (x: unknown): x is Blob => {\n\treturn typeof x !== 'undefined' && x instanceof Blob;\n};\n\nconst isArrayBuffer = (x: unknown): x is ArrayBuffer => {\n\treturn typeof x !== 'undefined' && x instanceof ArrayBuffer;\n};\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,OAAO,IAAMC,UAAU,GAAG,SAAAA,CAACC,CAAU;EACpC,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IAC1B,OAAOA,CAAC,CAACC,MAAM;GACf,MAAM,IAAIC,aAAa,CAACF,CAAC,CAAC,EAAE;IAC5B,OAAOA,CAAC,CAACD,UAAU;GACnB,MAAM,IAAII,MAAM,CAACH,CAAC,CAAC,EAAE;IACrB,OAAOA,CAAC,CAACI,IAAI;GACb,MAAM;IACN,MAAM,IAAIC,KAAK,CAAC,kCAAkC,GAAGL,CAAC,CAAC;;AAEzD,CAAC;AAED,OAAO,IAAMM,oBAAoB,GAAG,SAAAA,CACnCC,KAAc,EACdC,KAAa,EACbC,KAAU,EACVC,OAAY,EACZC,OAAe;EAEf,IAAIJ,KAAK,EAAE;IACV,IAAMK,IAAI,GAAG;MAAEH,KAAK,EAAAA;IAAA,CAAE;IACtB,IAAIC,OAAO,EAAE;MACZE,IAAI,CAAC,SAAS,CAAC,GAAGF,OAAO;;IAE1Bb,GAAG,CAACgB,QAAQ,CACX,SAAS,EACT;MACCL,KAAK,EAAAA,KAAA;MACLI,IAAI,EAAAA,IAAA;MACJD,OAAO,EAAAA;KACP,EACD,SAAS,EACTb,cAAc,CACd;;AAEH,CAAC;AAED,OAAO,IAAMgB,MAAM,GAAG,SAAAA,CAACd,CAAU;EAChC,OAAO,OAAOA,CAAC,KAAK,WAAW,IAAIA,CAAC,YAAYe,IAAI;AACrD,CAAC;AAED,OAAO,IAAMZ,MAAM,GAAG,SAAAA,CAACH,CAAU;EAChC,OAAO,OAAOA,CAAC,KAAK,WAAW,IAAIA,CAAC,YAAYgB,IAAI;AACrD,CAAC;AAED,IAAMd,aAAa,GAAG,SAAAA,CAACF,CAAU;EAChC,OAAO,OAAOA,CAAC,KAAK,WAAW,IAAIA,CAAC,YAAYiB,WAAW;AAC5D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}