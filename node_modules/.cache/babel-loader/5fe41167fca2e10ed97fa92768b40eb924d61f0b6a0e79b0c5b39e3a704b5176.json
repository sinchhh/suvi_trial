{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\n/**\n * @internal\n */\nexport var useRegionalEndpointMiddleware = function (config) {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request, _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              request = args.request;\n              if (!HttpRequest.isInstance(request) || config.isCustomEndpoint) return [2 /*return*/, next(__assign({}, args))];\n              if (!(request.hostname === \"s3.amazonaws.com\")) return [3 /*break*/, 1];\n              request.hostname = \"s3.us-east-1.amazonaws.com\";\n              return [3 /*break*/, 3];\n            case 1:\n              _a = \"aws-global\";\n              return [4 /*yield*/, config.region()];\n            case 2:\n              if (_a === _b.sent()) {\n                request.hostname = \"s3.amazonaws.com\";\n              }\n              _b.label = 3;\n            case 3:\n              return [2 /*return*/, next(__assign({}, args))];\n          }\n        });\n      });\n    };\n  };\n};\n/**\n * @internal\n */\nexport var useRegionalEndpointMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"USE_REGIONAL_ENDPOINT\", \"S3\"],\n  name: \"useRegionalEndpointMiddleware\",\n  override: true\n};\n/**\n * @internal\n */\nexport var getUseRegionalEndpointPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(useRegionalEndpointMiddleware(config), useRegionalEndpointMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["HttpRequest","useRegionalEndpointMiddleware","config","next","args","__awaiter","request","isInstance","isCustomEndpoint","__assign","hostname","_a","region","_b","sent","useRegionalEndpointMiddlewareOptions","step","tags","name","override","getUseRegionalEndpointPlugin","applyToStack","clientStack","add"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\middleware-sdk-s3\\src\\use-regional-endpoint.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  BuildMiddleware,\n  MetadataBearer,\n  Pluggable,\n  Provider,\n} from \"@aws-sdk/types\";\n\ntype PreviouslyResolved = {\n  region: Provider<string>;\n  isCustomEndpoint: boolean;\n};\n\n/**\n * @internal\n */\nexport const useRegionalEndpointMiddleware = (config: PreviouslyResolved): BuildMiddleware<any, any> => <\n  Output extends MetadataBearer\n>(\n  next: BuildHandler<any, Output>\n): BuildHandler<any, Output> => async (args: BuildHandlerArguments<any>): Promise<BuildHandlerOutput<Output>> => {\n  const { request } = args;\n  if (!HttpRequest.isInstance(request) || config.isCustomEndpoint) return next({ ...args });\n  if (request.hostname === \"s3.amazonaws.com\") {\n    request.hostname = \"s3.us-east-1.amazonaws.com\";\n  } else if (\"aws-global\" === (await config.region())) {\n    request.hostname = \"s3.amazonaws.com\";\n  }\n  return next({ ...args });\n};\n\n/**\n * @internal\n */\nexport const useRegionalEndpointMiddlewareOptions: BuildHandlerOptions = {\n  step: \"build\",\n  tags: [\"USE_REGIONAL_ENDPOINT\", \"S3\"],\n  name: \"useRegionalEndpointMiddleware\",\n  override: true,\n};\n\n/**\n * @internal\n */\nexport const getUseRegionalEndpointPlugin = (config: PreviouslyResolved): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(useRegionalEndpointMiddleware(config), useRegionalEndpointMiddlewareOptions);\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAiBpD;;;AAGA,OAAO,IAAMC,6BAA6B,GAAG,SAAAA,CAACC,MAA0B;EAAgC,iBAGtGC,IAA+B;IACD,iBAAOC,IAAgC;MAAA,OAAAC,SAAA;;;;;cAC7DC,OAAO,GAAKF,IAAI,CAAAE,OAAT;cACf,IAAI,CAACN,WAAW,CAACO,UAAU,CAACD,OAAO,CAAC,IAAIJ,MAAM,CAACM,gBAAgB,EAAE,sBAAOL,IAAI,CAAAM,QAAA,KAAML,IAAI,EAAG;oBACrFE,OAAO,CAACI,QAAQ,KAAK,kBAAkB,GAAvC;cACFJ,OAAO,CAACI,QAAQ,GAAG,4BAA4B;;;cACtCC,EAAA,eAAY;cAAM,qBAAMT,MAAM,CAACU,MAAM,EAAE;;cAA3C,IAAID,EAAA,KAAkBE,EAAA,CAAAC,IAAA,EAAsB,EAAE;gBACnDR,OAAO,CAACI,QAAQ,GAAG,kBAAkB;;;;cAEvC,sBAAOP,IAAI,CAAAM,QAAA,KAAML,IAAI,EAAG;;;;KACzB;EAT+B,CAS/B;AAbuG,CAavG;AAED;;;AAGA,OAAO,IAAMW,oCAAoC,GAAwB;EACvEC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC;EACrCC,IAAI,EAAE,+BAA+B;EACrCC,QAAQ,EAAE;CACX;AAED;;;AAGA,OAAO,IAAMC,4BAA4B,GAAG,SAAAA,CAAClB,MAA0B;EAA0B,OAAC;IAChGmB,YAAY,EAAE,SAAAA,CAACC,WAAW;MACxBA,WAAW,CAACC,GAAG,CAACtB,6BAA6B,CAACC,MAAM,CAAC,EAAEa,oCAAoC,CAAC;IAC9F;GACD;AAJgG,CAI/F"},"metadata":{},"sourceType":"module","externalDependencies":[]}