{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteObjectsOutput, DeleteObjectsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlDeleteObjectsCommand, serializeAws_restXmlDeleteObjectsCommand } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This operation enables you to delete multiple objects from a bucket using a single HTTP\n *          request. If you know the object keys that you want to delete, then this operation provides\n *          a suitable alternative to sending individual delete requests, reducing per-request\n *          overhead.</p>\n *\n *          <p>The request contains a list of up to 1000 keys that you want to delete. In the XML, you\n *          provide the object key names, and optionally, version IDs if you want to delete a specific\n *          version of the object from a versioning-enabled bucket. For each key, Amazon S3 performs a\n *          delete operation and returns the result of that delete, success, or failure, in the\n *          response. Note that if the object specified in the request is not found, Amazon S3 returns the\n *          result as deleted.</p>\n *\n *          <p> The operation supports two modes for the response: verbose and quiet. By default, the\n *          operation uses verbose mode in which the response includes the result of deletion of each\n *          key in your request. In quiet mode the response includes only keys where the delete\n *          operation encountered an error. For a successful deletion, the operation does not return\n *          any information about the delete in the response body.</p>\n *\n *          <p>When performing this operation on an MFA Delete enabled bucket, that attempts to delete\n *          any versioned objects, you must include an MFA token. If you do not provide one, the entire\n *          request will fail, even if there are non-versioned objects you are trying to delete. If you\n *          provide an invalid token, whether there are versioned keys in the request or not, the\n *          entire Multi-Object Delete request will fail. For information about MFA Delete, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html#MultiFactorAuthenticationDelete\"> MFA\n *          Delete</a>.</p>\n *\n *          <p>Finally, the Content-MD5 header is required for all Multi-Object Delete requests. Amazon\n *          S3 uses the header value to ensure that your request body has not been altered in\n *          transit.</p>\n *\n *          <p>The following operations are related to <code>DeleteObjects</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar DeleteObjectsCommand = /** @class */function (_super) {\n  __extends(DeleteObjectsCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function DeleteObjectsCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  DeleteObjectsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"DeleteObjectsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteObjectsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteObjectsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  DeleteObjectsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlDeleteObjectsCommand(input, context);\n  };\n  DeleteObjectsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlDeleteObjectsCommand(output, context);\n  };\n  return DeleteObjectsCommand;\n}($Command);\nexport { DeleteObjectsCommand };","map":{"version":3,"names":["DeleteObjectsOutput","DeleteObjectsRequest","deserializeAws_restXmlDeleteObjectsCommand","serializeAws_restXmlDeleteObjectsCommand","getApplyMd5BodyChecksumPlugin","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","DeleteObjectsCommand","_super","__extends","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-s3\\commands\\DeleteObjectsCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { DeleteObjectsOutput, DeleteObjectsRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlDeleteObjectsCommand,\n  serializeAws_restXmlDeleteObjectsCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteObjectsCommandInput = DeleteObjectsRequest;\nexport type DeleteObjectsCommandOutput = DeleteObjectsOutput & __MetadataBearer;\n\n/**\n * <p>This operation enables you to delete multiple objects from a bucket using a single HTTP\n *          request. If you know the object keys that you want to delete, then this operation provides\n *          a suitable alternative to sending individual delete requests, reducing per-request\n *          overhead.</p>\n *\n *          <p>The request contains a list of up to 1000 keys that you want to delete. In the XML, you\n *          provide the object key names, and optionally, version IDs if you want to delete a specific\n *          version of the object from a versioning-enabled bucket. For each key, Amazon S3 performs a\n *          delete operation and returns the result of that delete, success, or failure, in the\n *          response. Note that if the object specified in the request is not found, Amazon S3 returns the\n *          result as deleted.</p>\n *\n *          <p> The operation supports two modes for the response: verbose and quiet. By default, the\n *          operation uses verbose mode in which the response includes the result of deletion of each\n *          key in your request. In quiet mode the response includes only keys where the delete\n *          operation encountered an error. For a successful deletion, the operation does not return\n *          any information about the delete in the response body.</p>\n *\n *          <p>When performing this operation on an MFA Delete enabled bucket, that attempts to delete\n *          any versioned objects, you must include an MFA token. If you do not provide one, the entire\n *          request will fail, even if there are non-versioned objects you are trying to delete. If you\n *          provide an invalid token, whether there are versioned keys in the request or not, the\n *          entire Multi-Object Delete request will fail. For information about MFA Delete, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html#MultiFactorAuthenticationDelete\"> MFA\n *          Delete</a>.</p>\n *\n *          <p>Finally, the Content-MD5 header is required for all Multi-Object Delete requests. Amazon\n *          S3 uses the header value to ensure that your request body has not been altered in\n *          transit.</p>\n *\n *          <p>The following operations are related to <code>DeleteObjects</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class DeleteObjectsCommand extends $Command<\n  DeleteObjectsCommandInput,\n  DeleteObjectsCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteObjectsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteObjectsCommandInput, DeleteObjectsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"DeleteObjectsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteObjectsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteObjectsOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteObjectsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlDeleteObjectsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteObjectsCommandOutput> {\n    return deserializeAws_restXmlDeleteObjectsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"],"mappings":";AACA,SAASA,mBAAmB,EAAEC,oBAAoB,QAAQ,oBAAoB;AAC9E,SACEC,0CAA0C,EAC1CC,wCAAwC,QACnC,0BAA0B;AACjC,SAASC,6BAA6B,QAAQ,yCAAyC;AACvF,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,IAAAC,oBAAA,0BAAAC,MAAA;EAA0CC,SAAA,CAAAF,oBAAA,EAAAC,MAAA;EAKxC;EACA;EAEA,SAAAD,qBAAqBG,KAAgC;IAArD,IAAAC,KAAA;IACE;IACAH,MAAA,CAAAI,IAAA,MAAO;IAFYD,KAAA,CAAAD,KAAK,GAALA,KAAK;;IAGxB;EACF;EAEA;;;EAGAH,oBAAA,CAAAM,SAAA,CAAAC,iBAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACf,cAAc,CAACY,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAAChB,uBAAuB,CAACa,aAAa,CAAC,CAAC;IAChE,IAAI,CAACE,eAAe,CAACC,GAAG,CAACjB,6BAA6B,CAACc,aAAa,CAAC,CAAC;IAEtE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,IAAAM,MAAM,GAAKR,aAAa,CAAAQ,MAAlB;IACd,IAAMC,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,sBAAsB;IAC1C,IAAMC,uBAAuB,GAA4B;MACvDH,MAAM,EAAAA,MAAA;MACNC,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,uBAAuB,EAAE7B,oBAAoB,CAAC8B,kBAAkB;MAChEC,wBAAwB,EAAEhC,mBAAmB,CAAC+B;KAC/C;IACO,IAAAE,cAAc,GAAKf,aAAa,CAAAe,cAAlB;IACtB,OAAOT,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,OAAAF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxEU,uBAAuB,CACxB;EACH,CAAC;EAEOpB,oBAAA,CAAAM,SAAA,CAAAO,SAAS,GAAjB,UAAkBV,KAAgC,EAAEyB,OAAuB;IACzE,OAAOlC,wCAAwC,CAACS,KAAK,EAAEyB,OAAO,CAAC;EACjE,CAAC;EAEO5B,oBAAA,CAAAM,SAAA,CAAAQ,WAAW,GAAnB,UAAoBe,MAAsB,EAAED,OAAuB;IACjE,OAAOnC,0CAA0C,CAACoC,MAAM,EAAED,OAAO,CAAC;EACpE,CAAC;EAIH,OAAA5B,oBAAC;AAAD,CAAC,CAxDyCD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}