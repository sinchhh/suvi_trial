{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Auth } from '@aws-amplify/auth';\nimport { Cache } from '@aws-amplify/cache';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport { GraphQLAPIClass } from '@aws-amplify/api-graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */function () {\n  /**\n   * Initialize API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function APIClass(options) {\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    this._restApi = new RestAPIClass(options);\n    this._graphqlApi = new GraphQLAPIClass(options);\n    logger.debug('API Options', this._options);\n  }\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  APIClass.prototype.configure = function (options) {\n    this._options = Object.assign({}, this._options, options);\n    // Share Amplify instance with client for SSR\n    this._restApi.Credentials = this.Credentials;\n    this._graphqlApi.Auth = this.Auth;\n    this._graphqlApi.Cache = this.Cache;\n    this._graphqlApi.Credentials = this.Credentials;\n    var restAPIConfig = this._restApi.configure(this._options);\n    var graphQLAPIConfig = this._graphqlApi.configure(this._options);\n    return __assign(__assign({}, restAPIConfig), graphQLAPIConfig);\n  };\n  /**\n   * Make a GET request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.get = function (apiName, path, init) {\n    return this._restApi.get(apiName, path, init);\n  };\n  /**\n   * Make a POST request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.post = function (apiName, path, init) {\n    return this._restApi.post(apiName, path, init);\n  };\n  /**\n   * Make a PUT request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.put = function (apiName, path, init) {\n    return this._restApi.put(apiName, path, init);\n  };\n  /**\n   * Make a PATCH request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.patch = function (apiName, path, init) {\n    return this._restApi.patch(apiName, path, init);\n  };\n  /**\n   * Make a DEL request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.del = function (apiName, path, init) {\n    return this._restApi.del(apiName, path, init);\n  };\n  /**\n   * Make a HEAD request\n   * @param apiName - The api name of the request\n   * @param path - The path of the request\n   * @param [init] - Request extra params\n   * @return A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.head = function (apiName, path, init) {\n    return this._restApi.head(apiName, path, init);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param error - Any error\n   * @return If the error was from an api request cancellation\n   */\n  APIClass.prototype.isCancel = function (error) {\n    return this._restApi.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request for either a GraphQL request or a Rest API request.\n   * @param request - request to cancel\n   * @param [message] - custom error message\n   * @return If the request was cancelled\n   */\n  APIClass.prototype.cancel = function (request, message) {\n    if (this._restApi.hasCancelToken(request)) {\n      return this._restApi.cancel(request, message);\n    } else if (this._graphqlApi.hasCancelToken(request)) {\n      return this._graphqlApi.cancel(request, message);\n    }\n    return false;\n  };\n  /**\n   * Getting endpoint for API\n   * @param apiName - The name of the api\n   * @return The endpoint of the api\n   */\n  APIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._restApi.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  APIClass.prototype.getGraphqlOperationType = function (operation) {\n    return this._graphqlApi.getGraphqlOperationType(operation);\n  };\n  APIClass.prototype.graphql = function (options, additionalHeaders) {\n    return this._graphqlApi.graphql(options, additionalHeaders);\n  };\n  return APIClass;\n}();\nexport { APIClass };\nexport var API = new APIClass(null);\nAmplify.register(API);","map":{"version":3,"names":["Auth","Cache","RestAPIClass","GraphQLAPIClass","Amplify","ConsoleLogger","Logger","Credentials","logger","APIClass","options","_options","_restApi","_graphqlApi","debug","prototype","getModuleName","configure","Object","assign","restAPIConfig","graphQLAPIConfig","__assign","get","apiName","path","init","post","put","patch","del","head","isCancel","error","cancel","request","message","hasCancelToken","endpoint","getGraphqlOperationType","operation","graphql","additionalHeaders","API","register"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\api\\src\\API.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Auth } from '@aws-amplify/auth';\nimport { Cache } from '@aws-amplify/cache';\nimport { AWSAppSyncRealTimeProvider } from '@aws-amplify/pubsub';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport {\n\tGraphQLAPIClass,\n\tGraphQLOptions,\n\tGraphQLResult,\n\tGraphQLOperation,\n\tOperationTypeNode,\n} from '@aws-amplify/api-graphql';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n} from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\nimport { GraphQLQuery, GraphQLSubscription } from './types';\n\nconst logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nexport class APIClass {\n\t/**\n\t * Initialize API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tprivate _options;\n\tprivate _restApi: RestAPIClass;\n\tprivate _graphqlApi: GraphQLAPIClass;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tthis._restApi = new RestAPIClass(options);\n\t\tthis._graphqlApi = new GraphQLAPIClass(options);\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'API';\n\t}\n\n\t/**\n\t * Configure API part with aws configurations\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tthis._options = Object.assign({}, this._options, options);\n\n\t\t// Share Amplify instance with client for SSR\n\t\tthis._restApi.Credentials = this.Credentials;\n\n\t\tthis._graphqlApi.Auth = this.Auth;\n\t\tthis._graphqlApi.Cache = this.Cache;\n\t\tthis._graphqlApi.Credentials = this.Credentials;\n\n\t\tconst restAPIConfig = this._restApi.configure(this._options);\n\t\tconst graphQLAPIConfig = this._graphqlApi.configure(this._options);\n\n\t\treturn { ...restAPIConfig, ...graphQLAPIConfig };\n\t}\n\n\t/**\n\t * Make a GET request\n\t * @param apiName - The api name of the request\n\t * @param path - The path of the request\n\t * @param [init] - Request extra params\n\t * @return A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(\n\t\tapiName: string,\n\t\tpath: string,\n\t\tinit: { [key: string]: any }\n\t): Promise<any> {\n\t\treturn this._restApi.get(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a POST request\n\t * @param apiName - The api name of the request\n\t * @param path - The path of the request\n\t * @param [init] - Request extra params\n\t * @return A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(\n\t\tapiName: string,\n\t\tpath: string,\n\t\tinit: { [key: string]: any }\n\t): Promise<any> {\n\t\treturn this._restApi.post(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a PUT request\n\t * @param apiName - The api name of the request\n\t * @param path - The path of the request\n\t * @param [init] - Request extra params\n\t * @return A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(\n\t\tapiName: string,\n\t\tpath: string,\n\t\tinit: { [key: string]: any }\n\t): Promise<any> {\n\t\treturn this._restApi.put(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a PATCH request\n\t * @param apiName - The api name of the request\n\t * @param path - The path of the request\n\t * @param [init] - Request extra params\n\t * @return A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(\n\t\tapiName: string,\n\t\tpath: string,\n\t\tinit: { [key: string]: any }\n\t): Promise<any> {\n\t\treturn this._restApi.patch(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a DEL request\n\t * @param apiName - The api name of the request\n\t * @param path - The path of the request\n\t * @param [init] - Request extra params\n\t * @return A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(\n\t\tapiName: string,\n\t\tpath: string,\n\t\tinit: { [key: string]: any }\n\t): Promise<any> {\n\t\treturn this._restApi.del(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a HEAD request\n\t * @param apiName - The api name of the request\n\t * @param path - The path of the request\n\t * @param [init] - Request extra params\n\t * @return A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(\n\t\tapiName: string,\n\t\tpath: string,\n\t\tinit: { [key: string]: any }\n\t): Promise<any> {\n\t\treturn this._restApi.head(apiName, path, init);\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param error - Any error\n\t * @return If the error was from an api request cancellation\n\t */\n\tisCancel(error: any): boolean {\n\t\treturn this._restApi.isCancel(error);\n\t}\n\t/**\n\t * Cancels an inflight request for either a GraphQL request or a Rest API request.\n\t * @param request - request to cancel\n\t * @param [message] - custom error message\n\t * @return If the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string): boolean {\n\t\tif (this._restApi.hasCancelToken(request)) {\n\t\t\treturn this._restApi.cancel(request, message);\n\t\t} else if (this._graphqlApi.hasCancelToken(request)) {\n\t\t\treturn this._graphqlApi.cancel(request, message);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param apiName - The name of the api\n\t * @return The endpoint of the api\n\t */\n\tasync endpoint(apiName: string): Promise<string> {\n\t\treturn this._restApi.endpoint(apiName);\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation: GraphQLOperation): OperationTypeNode {\n\t\treturn this._graphqlApi.getGraphqlOperationType(operation);\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param options - GraphQL Options\n\t * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n\t * @returns An Observable if queryType is 'subscription', else a promise of the graphql result from the query.\n\t */\n\tgraphql<T>(\n\t\toptions: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): T extends GraphQLQuery<T>\n\t\t? Promise<GraphQLResult<T>>\n\t\t: T extends GraphQLSubscription<T>\n\t\t? Observable<{\n\t\t\t\tprovider: AWSAppSyncRealTimeProvider;\n\t\t\t\tvalue: GraphQLResult<T>;\n\t\t  }>\n\t\t: Promise<GraphQLResult<any>> | Observable<object>;\n\tgraphql<T = any>(\n\t\toptions: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): Promise<GraphQLResult<any>> | Observable<object> {\n\t\treturn this._graphqlApi.graphql(options, additionalHeaders);\n\t}\n}\n\nexport const API = new APIClass(null);\nAmplify.register(API);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}