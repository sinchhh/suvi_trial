{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants';\nimport { getHashedData } from './dataHashHelpers';\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nexport var getSigningKey = function (secretAccessKey, date, region, service) {\n  var key = \"\" + SIGNATURE_IDENTIFIER + secretAccessKey;\n  var dateKey = getHashedData(key, date);\n  var regionKey = getHashedData(dateKey, region);\n  var serviceKey = getHashedData(regionKey, service);\n  var signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n  return signingKey;\n};","map":{"version":3,"names":["KEY_TYPE_IDENTIFIER","SIGNATURE_IDENTIFIER","getHashedData","getSigningKey","secretAccessKey","date","region","service","key","dateKey","regionKey","serviceKey","signingKey"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\signing\\signer\\signatureV4\\utils\\getSigningKey.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants';\nimport { getHashedData } from './dataHashHelpers';\n\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nexport const getSigningKey = (\n\tsecretAccessKey: string,\n\tdate: string,\n\tregion: string,\n\tservice: string\n): Uint8Array => {\n\tconst key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n\tconst dateKey = getHashedData(key, date);\n\tconst regionKey = getHashedData(dateKey, region);\n\tconst serviceKey = getHashedData(regionKey, service);\n\tconst signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n\treturn signingKey;\n};\n"],"mappings":"AAAA;AACA;AAEA,SAASA,mBAAmB,EAAEC,oBAAoB,QAAQ,cAAc;AACxE,SAASC,aAAa,QAAQ,mBAAmB;AAEjD;;;;;;;;;;;;AAYA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAC5BC,eAAuB,EACvBC,IAAY,EACZC,MAAc,EACdC,OAAe;EAEf,IAAMC,GAAG,GAAG,KAAGP,oBAAoB,GAAGG,eAAiB;EACvD,IAAMK,OAAO,GAAGP,aAAa,CAACM,GAAG,EAAEH,IAAI,CAAC;EACxC,IAAMK,SAAS,GAAGR,aAAa,CAACO,OAAO,EAAEH,MAAM,CAAC;EAChD,IAAMK,UAAU,GAAGT,aAAa,CAACQ,SAAS,EAAEH,OAAO,CAAC;EACpD,IAAMK,UAAU,GAAGV,aAAa,CAACS,UAAU,EAAEX,mBAAmB,CAAC;EACjE,OAAOY,UAAU;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}