{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketAccelerateConfigurationOutput, GetBucketAccelerateConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketAccelerateConfigurationCommand, serializeAws_restXmlGetBucketAccelerateConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the GET operation uses the <code>accelerate</code> subresource to\n *          return the Transfer Acceleration state of a bucket, which is either <code>Enabled</code> or\n *             <code>Suspended</code>. Amazon S3 Transfer Acceleration is a bucket-level feature that\n *          enables you to perform faster data transfers to and from Amazon S3.</p>\n *          <p>To use this operation, you must have permission to perform the\n *             <code>s3:GetAccelerateConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to your Amazon S3\n *             Resources</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>You set the Transfer Acceleration state of an existing bucket to <code>Enabled</code> or\n *             <code>Suspended</code> by using the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html\">PutBucketAccelerateConfiguration</a> operation. </p>\n *          <p>A GET <code>accelerate</code> request does not return a state value for a bucket that\n *          has no transfer acceleration state. A bucket has no Transfer Acceleration state if a state\n *          has never been set on the bucket. </p>\n *\n *          <p>For more information about transfer acceleration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Transfer Acceleration</a> in the\n *          Amazon Simple Storage Service Developer Guide.</p>\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html\">PutBucketAccelerateConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar GetBucketAccelerateConfigurationCommand = /** @class */function (_super) {\n  __extends(GetBucketAccelerateConfigurationCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetBucketAccelerateConfigurationCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetBucketAccelerateConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketAccelerateConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketAccelerateConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketAccelerateConfigurationOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetBucketAccelerateConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context);\n  };\n  GetBucketAccelerateConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context);\n  };\n  return GetBucketAccelerateConfigurationCommand;\n}($Command);\nexport { GetBucketAccelerateConfigurationCommand };","map":{"version":3,"names":["GetBucketAccelerateConfigurationOutput","GetBucketAccelerateConfigurationRequest","deserializeAws_restXmlGetBucketAccelerateConfigurationCommand","serializeAws_restXmlGetBucketAccelerateConfigurationCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","GetBucketAccelerateConfigurationCommand","_super","__extends","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-s3\\commands\\GetBucketAccelerateConfigurationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { GetBucketAccelerateConfigurationOutput, GetBucketAccelerateConfigurationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlGetBucketAccelerateConfigurationCommand,\n  serializeAws_restXmlGetBucketAccelerateConfigurationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetBucketAccelerateConfigurationCommandInput = GetBucketAccelerateConfigurationRequest;\nexport type GetBucketAccelerateConfigurationCommandOutput = GetBucketAccelerateConfigurationOutput & __MetadataBearer;\n\n/**\n * <p>This implementation of the GET operation uses the <code>accelerate</code> subresource to\n *          return the Transfer Acceleration state of a bucket, which is either <code>Enabled</code> or\n *             <code>Suspended</code>. Amazon S3 Transfer Acceleration is a bucket-level feature that\n *          enables you to perform faster data transfers to and from Amazon S3.</p>\n *          <p>To use this operation, you must have permission to perform the\n *             <code>s3:GetAccelerateConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to your Amazon S3\n *             Resources</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>You set the Transfer Acceleration state of an existing bucket to <code>Enabled</code> or\n *             <code>Suspended</code> by using the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html\">PutBucketAccelerateConfiguration</a> operation. </p>\n *          <p>A GET <code>accelerate</code> request does not return a state value for a bucket that\n *          has no transfer acceleration state. A bucket has no Transfer Acceleration state if a state\n *          has never been set on the bucket. </p>\n *\n *          <p>For more information about transfer acceleration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Transfer Acceleration</a> in the\n *          Amazon Simple Storage Service Developer Guide.</p>\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html\">PutBucketAccelerateConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class GetBucketAccelerateConfigurationCommand extends $Command<\n  GetBucketAccelerateConfigurationCommandInput,\n  GetBucketAccelerateConfigurationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetBucketAccelerateConfigurationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetBucketAccelerateConfigurationCommandInput, GetBucketAccelerateConfigurationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetBucketAccelerateConfigurationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetBucketAccelerateConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketAccelerateConfigurationOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: GetBucketAccelerateConfigurationCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<GetBucketAccelerateConfigurationCommandOutput> {\n    return deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"],"mappings":";AACA,SAASA,sCAAsC,EAAEC,uCAAuC,QAAQ,oBAAoB;AACpH,SACEC,6DAA6D,EAC7DC,2DAA2D,QACtD,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAAC,uCAAA,0BAAAC,MAAA;EAA6DC,SAAA,CAAAF,uCAAA,EAAAC,MAAA;EAK3D;EACA;EAEA,SAAAD,wCAAqBG,KAAmD;IAAxE,IAAAC,KAAA;IACE;IACAH,MAAA,CAAAI,IAAA,MAAO;IAFYD,KAAA,CAAAD,KAAK,GAALA,KAAK;;IAGxB;EACF;EAEA;;;EAGAH,uCAAA,CAAAM,SAAA,CAAAC,iBAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACf,cAAc,CAACY,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAAChB,uBAAuB,CAACa,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,IAAAM,MAAM,GAAKR,aAAa,CAAAQ,MAAlB;IACd,IAAMC,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,yCAAyC;IAC7D,IAAMC,uBAAuB,GAA4B;MACvDH,MAAM,EAAAA,MAAA;MACNC,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,uBAAuB,EAAE5B,uCAAuC,CAAC6B,kBAAkB;MACnFC,wBAAwB,EAAE/B,sCAAsC,CAAC8B;KAClE;IACO,IAAAE,cAAc,GAAKf,aAAa,CAAAe,cAAlB;IACtB,OAAOT,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,OAAAF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxEU,uBAAuB,CACxB;EACH,CAAC;EAEOpB,uCAAA,CAAAM,SAAA,CAAAO,SAAS,GAAjB,UACEV,KAAmD,EACnDyB,OAAuB;IAEvB,OAAOjC,2DAA2D,CAACQ,KAAK,EAAEyB,OAAO,CAAC;EACpF,CAAC;EAEO5B,uCAAA,CAAAM,SAAA,CAAAQ,WAAW,GAAnB,UACEe,MAAsB,EACtBD,OAAuB;IAEvB,OAAOlC,6DAA6D,CAACmC,MAAM,EAAED,OAAO,CAAC;EACvF,CAAC;EAIH,OAAA5B,uCAAC;AAAD,CAAC,CA7D4DD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}