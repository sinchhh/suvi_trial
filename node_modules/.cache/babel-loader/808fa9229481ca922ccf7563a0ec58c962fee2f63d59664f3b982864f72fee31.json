{"ast":null,"code":"import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@aws-sdk/hash-blob-browser\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { Md5 } from \"@aws-sdk/md5-js\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n/**\n * @internal\n */\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), {\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: function (_) {\n    return function () {\n      return Promise.reject(new Error(\"Credential is missing\"));\n    };\n  },\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version\n  }),\n  eventStreamSerdeProvider: eventStreamSerdeProvider,\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  md5: Md5,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector: streamCollector,\n  streamHasher: streamHasher,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8\n});","map":{"version":3,"names":["packageInfo","Sha256","eventStreamSerdeProvider","FetchHttpHandler","streamCollector","blobHasher","streamHasher","invalidProvider","Md5","DEFAULT_MAX_ATTEMPTS","fromBase64","toBase64","calculateBodyLength","defaultUserAgent","fromUtf8","toUtf8","ClientSharedValues","ClientDefaultValues","__assign","runtime","base64Decoder","base64Encoder","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","maxAttempts","md5","region","requestHandler","sha256","utf8Decoder","utf8Encoder"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-s3\\runtimeConfig.browser.ts"],"sourcesContent":["import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@aws-sdk/hash-blob-browser\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { Md5 } from \"@aws-sdk/md5-js\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./S3Client\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (_: unknown) => () => Promise.reject(new Error(\"Credential is missing\")),\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version,\n  }),\n  eventStreamSerdeProvider,\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  md5: Md5,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  streamHasher,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAExC,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,wBAAwB,QAAQ,oCAAoC;AAC7E,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,6BAA6B;AAC/E,SAASC,UAAU,IAAIC,YAAY,QAAQ,4BAA4B;AACvE,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,UAAU,EAAEC,QAAQ,QAAQ,8BAA8B;AACnE,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,QAAQ,EAAEC,MAAM,QAAQ,4BAA4B;AAE7D,SAASC,kBAAkB,QAAQ,wBAAwB;AAE3D;;;AAGA,OAAO,IAAMC,mBAAmB,GAAAC,QAAA,CAAAA,QAAA,KAC3BF,kBAAkB;EACrBG,OAAO,EAAE,SAAS;EAClBC,aAAa,EAAEV,UAAU;EACzBW,aAAa,EAAEV,QAAQ;EACvBW,iBAAiB,EAAEV,mBAAmB;EACtCW,yBAAyB,EAAE,SAAAA,CAACC,CAAU;IAAK;MAAM,OAAAC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAAlD,CAAkD;EAAxD,CAAwD;EACnGC,wBAAwB,EAAEf,gBAAgB,CAAC;IACzCgB,SAAS,EAAEb,kBAAkB,CAACa,SAAS;IACvCC,aAAa,EAAE9B,WAAW,CAAC+B;GAC5B,CAAC;EACF7B,wBAAwB,EAAAA,wBAAA;EACxB8B,WAAW,EAAEvB,oBAAoB;EACjCwB,GAAG,EAAEzB,GAAG;EACR0B,MAAM,EAAE3B,eAAe,CAAC,mBAAmB,CAAC;EAC5C4B,cAAc,EAAE,IAAIhC,gBAAgB,EAAE;EACtCiC,MAAM,EAAEnC,MAAM;EACdG,eAAe,EAAAA,eAAA;EACfE,YAAY,EAAAA,YAAA;EACZ+B,WAAW,EAAEvB,QAAQ;EACrBwB,WAAW,EAAEvB;AAAM,EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}