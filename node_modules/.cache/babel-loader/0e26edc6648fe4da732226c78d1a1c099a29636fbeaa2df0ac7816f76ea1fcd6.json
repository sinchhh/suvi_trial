{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ListBucketAnalyticsConfigurationsOutput, ListBucketAnalyticsConfigurationsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand, serializeAws_restXmlListBucketAnalyticsConfigurationsCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Lists the analytics configurations for the bucket. You can have up to 1,000 analytics\n *          configurations per bucket.</p>\n *\n *          <p>This operation supports list pagination and does not return more than 100 configurations\n *          at a time. You should always check the <code>IsTruncated</code> element in the response. If\n *          there are no more configurations to list, <code>IsTruncated</code> is set to false. If\n *          there are more configurations to list, <code>IsTruncated</code> is set to true, and there\n *          will be a value in <code>NextContinuationToken</code>. You use the\n *             <code>NextContinuationToken</code> value to continue the pagination of the list by\n *          passing the value in continuation-token in the request to <code>GET</code> the next\n *          page.</p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:GetAnalyticsConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about Amazon S3 analytics feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html\">Amazon S3 Analytics – Storage Class\n *             Analysis</a>. </p>\n *\n *          <p>The following operations are related to\n *          <code>ListBucketAnalyticsConfigurations</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html\">GetBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html\">DeleteBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html\">PutBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar ListBucketAnalyticsConfigurationsCommand = /** @class */function (_super) {\n  __extends(ListBucketAnalyticsConfigurationsCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function ListBucketAnalyticsConfigurationsCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  ListBucketAnalyticsConfigurationsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"ListBucketAnalyticsConfigurationsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  ListBucketAnalyticsConfigurationsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context);\n  };\n  ListBucketAnalyticsConfigurationsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context);\n  };\n  return ListBucketAnalyticsConfigurationsCommand;\n}($Command);\nexport { ListBucketAnalyticsConfigurationsCommand };","map":{"version":3,"names":["ListBucketAnalyticsConfigurationsOutput","ListBucketAnalyticsConfigurationsRequest","deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand","serializeAws_restXmlListBucketAnalyticsConfigurationsCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","ListBucketAnalyticsConfigurationsCommand","_super","__extends","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-s3\\commands\\ListBucketAnalyticsConfigurationsCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { ListBucketAnalyticsConfigurationsOutput, ListBucketAnalyticsConfigurationsRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand,\n  serializeAws_restXmlListBucketAnalyticsConfigurationsCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type ListBucketAnalyticsConfigurationsCommandInput = ListBucketAnalyticsConfigurationsRequest;\nexport type ListBucketAnalyticsConfigurationsCommandOutput = ListBucketAnalyticsConfigurationsOutput & __MetadataBearer;\n\n/**\n * <p>Lists the analytics configurations for the bucket. You can have up to 1,000 analytics\n *          configurations per bucket.</p>\n *\n *          <p>This operation supports list pagination and does not return more than 100 configurations\n *          at a time. You should always check the <code>IsTruncated</code> element in the response. If\n *          there are no more configurations to list, <code>IsTruncated</code> is set to false. If\n *          there are more configurations to list, <code>IsTruncated</code> is set to true, and there\n *          will be a value in <code>NextContinuationToken</code>. You use the\n *             <code>NextContinuationToken</code> value to continue the pagination of the list by\n *          passing the value in continuation-token in the request to <code>GET</code> the next\n *          page.</p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:GetAnalyticsConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>For information about Amazon S3 analytics feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html\">Amazon S3 Analytics – Storage Class\n *             Analysis</a>. </p>\n *\n *          <p>The following operations are related to\n *          <code>ListBucketAnalyticsConfigurations</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html\">GetBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html\">DeleteBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html\">PutBucketAnalyticsConfiguration</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class ListBucketAnalyticsConfigurationsCommand extends $Command<\n  ListBucketAnalyticsConfigurationsCommandInput,\n  ListBucketAnalyticsConfigurationsCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: ListBucketAnalyticsConfigurationsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<ListBucketAnalyticsConfigurationsCommandInput, ListBucketAnalyticsConfigurationsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"ListBucketAnalyticsConfigurationsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: ListBucketAnalyticsConfigurationsCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<ListBucketAnalyticsConfigurationsCommandOutput> {\n    return deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"],"mappings":";AACA,SAASA,uCAAuC,EAAEC,wCAAwC,QAAQ,oBAAoB;AACtH,SACEC,8DAA8D,EAC9DC,4DAA4D,QACvD,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAAC,wCAAA,0BAAAC,MAAA;EAA8DC,SAAA,CAAAF,wCAAA,EAAAC,MAAA;EAK5D;EACA;EAEA,SAAAD,yCAAqBG,KAAoD;IAAzE,IAAAC,KAAA;IACE;IACAH,MAAA,CAAAI,IAAA,MAAO;IAFYD,KAAA,CAAAD,KAAK,GAALA,KAAK;;IAGxB;EACF;EAEA;;;EAGAH,wCAAA,CAAAM,SAAA,CAAAC,iBAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACf,cAAc,CAACY,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAAChB,uBAAuB,CAACa,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,IAAAM,MAAM,GAAKR,aAAa,CAAAQ,MAAlB;IACd,IAAMC,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,0CAA0C;IAC9D,IAAMC,uBAAuB,GAA4B;MACvDH,MAAM,EAAAA,MAAA;MACNC,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,uBAAuB,EAAE5B,wCAAwC,CAAC6B,kBAAkB;MACpFC,wBAAwB,EAAE/B,uCAAuC,CAAC8B;KACnE;IACO,IAAAE,cAAc,GAAKf,aAAa,CAAAe,cAAlB;IACtB,OAAOT,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,OAAAF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxEU,uBAAuB,CACxB;EACH,CAAC;EAEOpB,wCAAA,CAAAM,SAAA,CAAAO,SAAS,GAAjB,UACEV,KAAoD,EACpDyB,OAAuB;IAEvB,OAAOjC,4DAA4D,CAACQ,KAAK,EAAEyB,OAAO,CAAC;EACrF,CAAC;EAEO5B,wCAAA,CAAAM,SAAA,CAAAQ,WAAW,GAAnB,UACEe,MAAsB,EACtBD,OAAuB;IAEvB,OAAOlC,8DAA8D,CAACmC,MAAM,EAAED,OAAO,CAAC;EACxF,CAAC;EAIH,OAAA5B,wCAAC;AAAD,CAAC,CA7D6DD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}