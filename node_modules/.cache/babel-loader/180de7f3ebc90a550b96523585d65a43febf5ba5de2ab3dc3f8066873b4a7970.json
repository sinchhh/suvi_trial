{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinch\\\\suvidha\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport Login from './Login';\nimport Signup from './Signup';\nimport ConfirmSignUp from './ConfirmSignUp';\nimport ForgotPassword from './ForgotPassword';\nimport ForgotPasswordSubmit from './ForgotPasswordSubmit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFormState = {\n  name: '',\n  email: '',\n  password: '',\n  confirmationCode: ''\n};\nasync function signUp(_ref, updateFormType) {\n  let {\n    email,\n    name,\n    password\n  } = _ref;\n  try {\n    await Auth.signUp({\n      email,\n      password,\n      attributes: {\n        email\n      }\n    });\n    console.log('sign up success!');\n    updateFormType('confirmSignUp');\n  } catch (err) {\n    console.log('error logging in..', err);\n  }\n}\nasync function confirmSignUp(_ref2, updateFormType) {\n  let {\n    email,\n    confirmationCode\n  } = _ref2;\n  try {\n    await Auth.confirmSignUp(email, confirmationCode);\n    updateFormType('login');\n  } catch (err) {\n    console.log('error logging in..', err);\n  }\n}\nasync function login(_ref3, setUser) {\n  let {\n    email,\n    password\n  } = _ref3;\n  try {\n    const user = await Auth.login(email, password);\n    const userInfo = {\n      email: user.email,\n      ...user.attributes\n    };\n    setUser(userInfo);\n  } catch (err) {\n    console.log('error logging in..', err);\n  }\n}\nasync function forgotPassword(_ref4, updateFormType) {\n  let {\n    email\n  } = _ref4;\n  try {\n    await Auth.forgotPassword(email);\n    updateFormType('forgotPasswordSubmit');\n  } catch (err) {\n    console.log('error submitting email to reset password...', err);\n  }\n}\nasync function forgotPasswordSubmit(_ref5, updateFormType) {\n  let {\n    email,\n    confirmationCode,\n    password\n  } = _ref5;\n  try {\n    await Auth.forgotPasswordSubmit(email, confirmationCode, password);\n    updateFormType('login');\n  } catch (err) {\n    console.log('error updating password... :', err);\n  }\n}\nfunction Form(props) {\n  _s();\n  const [formType, updateFormType] = useState('login');\n  const [formState, updateFormState] = useState(initialFormState);\n  function updateForm(event) {\n    const newFormState = {\n      ...formState,\n      [event.target.name]: event.target.value\n    };\n    updateFormState(newFormState);\n  }\n  function renderForm() {\n    switch (formType) {\n      case 'signUp':\n        return /*#__PURE__*/_jsxDEV(Signup, {\n          signUp: () => signUp(formState, updateFormType),\n          updateFormState: e => updateForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      case 'confirmSignUp':\n        return /*#__PURE__*/_jsxDEV(ConfirmSignUp, {\n          confirmSignUp: () => confirmSignUp(formState, updateFormType),\n          updateFormState: e => updateForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      case 'login':\n        return /*#__PURE__*/_jsxDEV(Login, {\n          login: () => login(formState, props.setUser),\n          updateFormState: e => updateForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      case 'forgotPassword':\n        return /*#__PURE__*/_jsxDEV(ForgotPassword, {\n          forgotPassword: () => forgotPassword(formState, updateFormType),\n          updateFormState: e => updateForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this);\n      case 'forgotPasswordSubmit':\n        return /*#__PURE__*/_jsxDEV(ForgotPasswordSubmit, {\n          forgotPasswordSubmit: () => forgotPasswordSubmit(formState, updateFormType),\n          updateFormState: e => updateForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderForm(), formType === 'signUp' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => updateFormType('login'),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), formType === 'login' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => updateFormType('signUp'),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Forget your password? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => updateFormType('forgotPassword'),\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"i32plQB/2fcMyupFI81xVcX3uKg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Auth","Login","Signup","ConfirmSignUp","ForgotPassword","ForgotPasswordSubmit","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFormState","name","email","password","confirmationCode","signUp","_ref","updateFormType","attributes","console","log","err","confirmSignUp","_ref2","login","_ref3","setUser","user","userInfo","forgotPassword","_ref4","forgotPasswordSubmit","_ref5","Form","props","_s","formType","formState","updateFormState","updateForm","event","newFormState","target","value","renderForm","e","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sinch/suvidha/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Auth } from 'aws-amplify'\r\nimport Login from './Login'\r\nimport Signup from './Signup'\r\nimport ConfirmSignUp from './ConfirmSignUp'\r\nimport ForgotPassword from './ForgotPassword'\r\nimport ForgotPasswordSubmit from './ForgotPasswordSubmit'\r\n\r\nconst initialFormState = {\r\n  name: '', email: '', password: '', confirmationCode: ''\r\n}\r\n\r\nasync function signUp({ email, name, password  }, updateFormType) {\r\n  try {\r\n    await Auth.signUp({\r\n      email, password, attributes: { email }\r\n    })\r\n    console.log('sign up success!')\r\n    updateFormType('confirmSignUp')\r\n  } catch (err) {\r\n    console.log('error logging in..', err)\r\n  }\r\n}\r\n\r\nasync function confirmSignUp({ email, confirmationCode }, updateFormType) {\r\n  try {\r\n    await Auth.confirmSignUp(email, confirmationCode)\r\n    updateFormType('login')\r\n  } catch (err) {\r\n    console.log('error logging in..', err)\r\n  }\r\n}\r\n\r\nasync function login({ email, password }, setUser) {\r\n  try {\r\n    const user = await Auth.login(email, password)\r\n    const userInfo = { email: user.email, ...user.attributes }\r\n    setUser(userInfo)\r\n  } catch (err) {\r\n    console.log('error logging in..', err)\r\n  }\r\n}\r\n\r\nasync function forgotPassword({ email }, updateFormType) {\r\n  try {\r\n    await Auth.forgotPassword(email)\r\n    updateFormType('forgotPasswordSubmit')\r\n  } catch (err) {\r\n    console.log('error submitting email to reset password...', err)\r\n  }\r\n}\r\n\r\nasync function forgotPasswordSubmit({ email, confirmationCode, password }, updateFormType) {\r\n  try {\r\n    await Auth.forgotPasswordSubmit(email, confirmationCode, password)\r\n    updateFormType('login')\r\n  } catch (err) {\r\n    console.log('error updating password... :', err)\r\n  }\r\n}\r\n\r\nfunction Form(props) {\r\n  const [formType, updateFormType] = useState('login')\r\n  const [formState, updateFormState] = useState(initialFormState)\r\n  function updateForm(event) {\r\n    const newFormState = {\r\n      ...formState, [event.target.name]: event.target.value\r\n    }\r\n    updateFormState(newFormState)\r\n  }\r\n\r\n  function renderForm() {\r\n    switch(formType) {\r\n      case 'signUp':\r\n        return (\r\n          <Signup\r\n            signUp={() => signUp(formState, updateFormType)}\r\n            updateFormState={e => updateForm(e)}\r\n          />\r\n        )\r\n      case 'confirmSignUp':\r\n        return (\r\n          <ConfirmSignUp\r\n            confirmSignUp={() => confirmSignUp(formState, updateFormType)}\r\n            updateFormState={e => updateForm(e)}\r\n          />\r\n        )\r\n      case 'login':\r\n        return (\r\n          <Login\r\n            login={() => login(formState, props.setUser)}\r\n            updateFormState={e => updateForm(e)}\r\n          />\r\n        )\r\n      case 'forgotPassword':\r\n        return (\r\n          <ForgotPassword\r\n          forgotPassword={() => forgotPassword(formState, updateFormType)}\r\n          updateFormState={e => updateForm(e)}\r\n          />\r\n        )\r\n      case 'forgotPasswordSubmit':\r\n        return (\r\n          <ForgotPasswordSubmit\r\n            forgotPasswordSubmit={() => forgotPasswordSubmit(formState, updateFormType)}\r\n            updateFormState={e => updateForm(e)}\r\n          />\r\n        )\r\n     default:\r\n        return null\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      {renderForm()}\r\n      {\r\n        formType === 'signUp' && (\r\n          <p>\r\n            Already have an account? <span\r\n            onClick={() => updateFormType('login')}\r\n            >Login</span>\r\n          </p>\r\n        )\r\n      }\r\n      {\r\n        formType === 'login' && (\r\n          <>\r\n            <p>\r\n              Need an account? <span\r\n              onClick={() => updateFormType('signUp')}\r\n              >Sign Up</span>\r\n            </p>\r\n            <p>\r\n              Forget your password? <span\r\n                onClick={() => updateFormType('forgotPassword')}\r\n              >Reset Password</span>\r\n            </p>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,aAAa;AAClC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,oBAAoB,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,EAAE;EAAEC,KAAK,EAAE,EAAE;EAAEC,QAAQ,EAAE,EAAE;EAAEC,gBAAgB,EAAE;AACvD,CAAC;AAED,eAAeC,MAAMA,CAAAC,IAAA,EAA6BC,cAAc,EAAE;EAAA,IAA5C;IAAEL,KAAK;IAAED,IAAI;IAAEE;EAAU,CAAC,GAAAG,IAAA;EAC9C,IAAI;IACF,MAAMhB,IAAI,CAACe,MAAM,CAAC;MAChBH,KAAK;MAAEC,QAAQ;MAAEK,UAAU,EAAE;QAAEN;MAAM;IACvC,CAAC,CAAC;IACFO,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BH,cAAc,CAAC,eAAe,CAAC;EACjC,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,GAAG,CAAC;EACxC;AACF;AAEA,eAAeC,aAAaA,CAAAC,KAAA,EAA8BN,cAAc,EAAE;EAAA,IAA7C;IAAEL,KAAK;IAAEE;EAAiB,CAAC,GAAAS,KAAA;EACtD,IAAI;IACF,MAAMvB,IAAI,CAACsB,aAAa,CAACV,KAAK,EAAEE,gBAAgB,CAAC;IACjDG,cAAc,CAAC,OAAO,CAAC;EACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,GAAG,CAAC;EACxC;AACF;AAEA,eAAeG,KAAKA,CAAAC,KAAA,EAAsBC,OAAO,EAAE;EAAA,IAA9B;IAAEd,KAAK;IAAEC;EAAS,CAAC,GAAAY,KAAA;EACtC,IAAI;IACF,MAAME,IAAI,GAAG,MAAM3B,IAAI,CAACwB,KAAK,CAACZ,KAAK,EAAEC,QAAQ,CAAC;IAC9C,MAAMe,QAAQ,GAAG;MAAEhB,KAAK,EAAEe,IAAI,CAACf,KAAK;MAAE,GAAGe,IAAI,CAACT;IAAW,CAAC;IAC1DQ,OAAO,CAACE,QAAQ,CAAC;EACnB,CAAC,CAAC,OAAOP,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,GAAG,CAAC;EACxC;AACF;AAEA,eAAeQ,cAAcA,CAAAC,KAAA,EAAYb,cAAc,EAAE;EAAA,IAA3B;IAAEL;EAAM,CAAC,GAAAkB,KAAA;EACrC,IAAI;IACF,MAAM9B,IAAI,CAAC6B,cAAc,CAACjB,KAAK,CAAC;IAChCK,cAAc,CAAC,sBAAsB,CAAC;EACxC,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEC,GAAG,CAAC;EACjE;AACF;AAEA,eAAeU,oBAAoBA,CAAAC,KAAA,EAAwCf,cAAc,EAAE;EAAA,IAAvD;IAAEL,KAAK;IAAEE,gBAAgB;IAAED;EAAS,CAAC,GAAAmB,KAAA;EACvE,IAAI;IACF,MAAMhC,IAAI,CAAC+B,oBAAoB,CAACnB,KAAK,EAAEE,gBAAgB,EAAED,QAAQ,CAAC;IAClEI,cAAc,CAAC,OAAO,CAAC;EACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,GAAG,CAAC;EAClD;AACF;AAEA,SAASY,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEnB,cAAc,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC;EACpD,MAAM,CAACsC,SAAS,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAACW,gBAAgB,CAAC;EAC/D,SAAS6B,UAAUA,CAACC,KAAK,EAAE;IACzB,MAAMC,YAAY,GAAG;MACnB,GAAGJ,SAAS;MAAE,CAACG,KAAK,CAACE,MAAM,CAAC/B,IAAI,GAAG6B,KAAK,CAACE,MAAM,CAACC;IAClD,CAAC;IACDL,eAAe,CAACG,YAAY,CAAC;EAC/B;EAEA,SAASG,UAAUA,CAAA,EAAG;IACpB,QAAOR,QAAQ;MACb,KAAK,QAAQ;QACX,oBACE7B,OAAA,CAACL,MAAM;UACLa,MAAM,EAAEA,CAAA,KAAMA,MAAM,CAACsB,SAAS,EAAEpB,cAAc,CAAE;UAChDqB,eAAe,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAEN,KAAK,eAAe;QAClB,oBACE1C,OAAA,CAACJ,aAAa;UACZmB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAACe,SAAS,EAAEpB,cAAc,CAAE;UAC9DqB,eAAe,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAEN,KAAK,OAAO;QACV,oBACE1C,OAAA,CAACN,KAAK;UACJuB,KAAK,EAAEA,CAAA,KAAMA,KAAK,CAACa,SAAS,EAAEH,KAAK,CAACR,OAAO,CAAE;UAC7CY,eAAe,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAEN,KAAK,gBAAgB;QACnB,oBACE1C,OAAA,CAACH,cAAc;UACfyB,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACQ,SAAS,EAAEpB,cAAc,CAAE;UAChEqB,eAAe,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAEN,KAAK,sBAAsB;QACzB,oBACE1C,OAAA,CAACF,oBAAoB;UACnB0B,oBAAoB,EAAEA,CAAA,KAAMA,oBAAoB,CAACM,SAAS,EAAEpB,cAAc,CAAE;UAC5EqB,eAAe,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAEP;QACG,OAAO,IAAI;IACf;EACF;EAGA,oBACE1C,OAAA;IAAA2C,QAAA,GACGN,UAAU,CAAC,CAAC,EAEXR,QAAQ,KAAK,QAAQ,iBACnB7B,OAAA;MAAA2C,QAAA,GAAG,2BACwB,eAAA3C,OAAA;QACzB4C,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAAC,OAAO,CAAE;QAAAiC,QAAA,EACtC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACJ,EAGDb,QAAQ,KAAK,OAAO,iBAClB7B,OAAA,CAAAE,SAAA;MAAAyC,QAAA,gBACE3C,OAAA;QAAA2C,QAAA,GAAG,mBACgB,eAAA3C,OAAA;UACjB4C,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAAC,QAAQ,CAAE;UAAAiC,QAAA,EACvC;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACJ1C,OAAA;QAAA2C,QAAA,GAAG,wBACqB,eAAA3C,OAAA;UACpB4C,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAAC,gBAAgB,CAAE;UAAAiC,QAAA,EACjD;QAAc;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA,eACJ,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEV;AAACd,EAAA,CAnFQF,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAoFb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}