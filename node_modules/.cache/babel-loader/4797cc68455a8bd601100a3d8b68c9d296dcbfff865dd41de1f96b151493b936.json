{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { blobReader } from \"@aws-sdk/chunked-blob-reader\";\nexport var blobHasher = function blobHasher(hashCtor, blob) {\n  return __awaiter(this, void 0, void 0, function () {\n    var hash;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hash = new hashCtor();\n          return [4 /*yield*/, blobReader(blob, function (chunk) {\n            hash.update(chunk);\n          })];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, hash.digest()];\n      }\n    });\n  });\n};","map":{"version":3,"names":["blobReader","blobHasher","hashCtor","blob","hash","chunk","update","_a","sent","digest"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\hash-blob-browser\\src\\index.ts"],"sourcesContent":["import { blobReader } from \"@aws-sdk/chunked-blob-reader\";\nimport { HashConstructor, StreamHasher } from \"@aws-sdk/types\";\n\nexport const blobHasher: StreamHasher<Blob> = async function blobHasher(\n  hashCtor: HashConstructor,\n  blob: Blob\n): Promise<Uint8Array> {\n  const hash = new hashCtor();\n\n  await blobReader(blob, (chunk) => {\n    hash.update(chunk);\n  });\n\n  return hash.digest();\n};\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,8BAA8B;AAGzD,OAAO,IAAMC,UAAU,GAAuB,SAAeA,UAAUA,CACrEC,QAAyB,EACzBC,IAAU;;;;;;UAEJC,IAAI,GAAG,IAAIF,QAAQ,EAAE;UAE3B,qBAAMF,UAAU,CAACG,IAAI,EAAE,UAACE,KAAK;YAC3BD,IAAI,CAACE,MAAM,CAACD,KAAK,CAAC;UACpB,CAAC,CAAC;;UAFFE,EAAA,CAAAC,IAAA,EAEE;UAEF,sBAAOJ,IAAI,CAACK,MAAM,EAAE;;;;CACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}