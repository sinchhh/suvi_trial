{"ast":null,"code":"import { __values } from \"tslib\";\nimport { escapeAttribute } from \"./escape-attribute\";\n/**\n * Represents an XML node.\n */\nvar XmlNode = /** @class */function () {\n  function XmlNode(name, children) {\n    if (children === void 0) {\n      children = [];\n    }\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n  }\n  XmlNode.prototype.withName = function (name) {\n    this.name = name;\n    return this;\n  };\n  XmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n  };\n  XmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n  };\n  XmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n  };\n  XmlNode.prototype.toString = function () {\n    var e_1, _a;\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = \"<\" + this.name;\n    // add attributes\n    var attributes = this.attributes;\n    try {\n      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var attributeName = _c.value;\n        var attribute = attributes[attributeName];\n        if (typeof attribute !== \"undefined\" && attribute !== null) {\n          xmlText += \" \" + attributeName + \"=\\\"\" + escapeAttribute(\"\" + attribute) + \"\\\"\";\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return xmlText += !hasChildren ? \"/>\" : \">\" + this.children.map(function (c) {\n      return c.toString();\n    }).join(\"\") + \"</\" + this.name + \">\";\n  };\n  return XmlNode;\n}();\nexport { XmlNode };","map":{"version":3,"names":["escapeAttribute","XmlNode","name","children","attributes","prototype","withName","addAttribute","value","addChildNode","child","push","removeAttribute","toString","hasChildren","Boolean","length","xmlText","_b","__values","Object","keys","_c","next","done","attributeName","attribute","map","c","join"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\xml-builder\\src\\XmlNode.ts"],"sourcesContent":["import { escapeAttribute } from \"./escape-attribute\";\nimport { Stringable } from \"./stringable\";\n\n/**\n * Represents an XML node.\n */\nexport class XmlNode {\n  private attributes: { [name: string]: any } = {};\n\n  constructor(private name: string, public readonly children: Stringable[] = []) {}\n\n  withName(name: string): XmlNode {\n    this.name = name;\n    return this;\n  }\n\n  addAttribute(name: string, value: any): XmlNode {\n    this.attributes[name] = value;\n    return this;\n  }\n\n  addChildNode(child: Stringable): XmlNode {\n    this.children.push(child);\n    return this;\n  }\n\n  removeAttribute(name: string): XmlNode {\n    delete this.attributes[name];\n    return this;\n  }\n\n  toString(): string {\n    const hasChildren = Boolean(this.children.length);\n    let xmlText = `<${this.name}`;\n    // add attributes\n    const attributes = this.attributes;\n    for (const attributeName of Object.keys(attributes)) {\n      const attribute = attributes[attributeName];\n      if (typeof attribute !== \"undefined\" && attribute !== null) {\n        xmlText += ` ${attributeName}=\"${escapeAttribute(\"\" + attribute)}\"`;\n      }\n    }\n\n    return (xmlText += !hasChildren ? \"/>\" : `>${this.children.map((c) => c.toString()).join(\"\")}</${this.name}>`);\n  }\n}\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,oBAAoB;AAGpD;;;AAGA,IAAAC,OAAA;EAGE,SAAAA,QAAoBC,IAAY,EAAkBC,QAA2B;IAA3B,IAAAA,QAAA;MAAAA,QAAA,KAA2B;IAAA;IAAzD,KAAAD,IAAI,GAAJA,IAAI;IAA0B,KAAAC,QAAQ,GAARA,QAAQ;IAFlD,KAAAC,UAAU,GAA4B,EAAE;EAEgC;EAEhFH,OAAA,CAAAI,SAAA,CAAAC,QAAQ,GAAR,UAASJ,IAAY;IACnB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,OAAO,IAAI;EACb,CAAC;EAEDD,OAAA,CAAAI,SAAA,CAAAE,YAAY,GAAZ,UAAaL,IAAY,EAAEM,KAAU;IACnC,IAAI,CAACJ,UAAU,CAACF,IAAI,CAAC,GAAGM,KAAK;IAC7B,OAAO,IAAI;EACb,CAAC;EAEDP,OAAA,CAAAI,SAAA,CAAAI,YAAY,GAAZ,UAAaC,KAAiB;IAC5B,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAACD,KAAK,CAAC;IACzB,OAAO,IAAI;EACb,CAAC;EAEDT,OAAA,CAAAI,SAAA,CAAAO,eAAe,GAAf,UAAgBV,IAAY;IAC1B,OAAO,IAAI,CAACE,UAAU,CAACF,IAAI,CAAC;IAC5B,OAAO,IAAI;EACb,CAAC;EAEDD,OAAA,CAAAI,SAAA,CAAAQ,QAAQ,GAAR;;IACE,IAAMC,WAAW,GAAGC,OAAO,CAAC,IAAI,CAACZ,QAAQ,CAACa,MAAM,CAAC;IACjD,IAAIC,OAAO,GAAG,MAAI,IAAI,CAACf,IAAM;IAC7B;IACA,IAAME,UAAU,GAAG,IAAI,CAACA,UAAU;;MAClC,KAA4B,IAAAc,EAAA,GAAAC,QAAA,CAAAC,MAAM,CAACC,IAAI,CAACjB,UAAU,CAAC,GAAAkB,EAAA,GAAAJ,EAAA,CAAAK,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAJ,EAAA,CAAAK,IAAA,IAAE;QAAhD,IAAME,aAAa,GAAAH,EAAA,CAAAd,KAAA;QACtB,IAAMkB,SAAS,GAAGtB,UAAU,CAACqB,aAAa,CAAC;QAC3C,IAAI,OAAOC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,IAAI,EAAE;UAC1DT,OAAO,IAAI,MAAIQ,aAAa,WAAKzB,eAAe,CAAC,EAAE,GAAG0B,SAAS,CAAC,OAAG;;;;;;;;;;;;;;IAIvE,OAAQT,OAAO,IAAI,CAACH,WAAW,GAAG,IAAI,GAAG,MAAI,IAAI,CAACX,QAAQ,CAACwB,GAAG,CAAC,UAACC,CAAC;MAAK,OAAAA,CAAC,CAACf,QAAQ,EAAE;IAAZ,CAAY,CAAC,CAACgB,IAAI,CAAC,EAAE,CAAC,UAAK,IAAI,CAAC3B,IAAI,MAAG;EAC/G,CAAC;EACH,OAAAD,OAAC;AAAD,CAAC,CAvCD"},"metadata":{},"sourceType":"module","externalDependencies":[]}