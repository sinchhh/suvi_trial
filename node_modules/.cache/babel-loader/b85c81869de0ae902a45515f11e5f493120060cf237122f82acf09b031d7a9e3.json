{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, DateUtils, Signer, Platform } from '@aws-amplify/core';\nimport axios from 'axios';\nimport { parse, format } from 'url';\nvar logger = new Logger('RestClient');\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nvar RestClient = /** @class */function () {\n  /**\n   * @param {RestClientOptions} [options] - Instance options\n   */\n  function RestClient(options) {\n    this._region = 'us-east-1'; // this will be updated by endpoint function\n    this._service = 'execute-api'; // this can be updated by endpoint function\n    this._custom_header = undefined; // this can be updated by endpoint function\n    /**\n     * This weak map provides functionality to let clients cancel\n     * in-flight axios requests. https://github.com/axios/axios#cancellation\n     *\n     * 1. For every axios request, a unique cancel token is generated and added in the request.\n     * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n     * 3. The promise is returned to the client.\n     * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n     * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n     * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n     * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n     *\n     * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n     */\n    this._cancelTokenMap = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n    if (this._cancelTokenMap == null) {\n      this._cancelTokenMap = new WeakMap();\n    }\n  }\n  /**\n  * Update AWS credentials\n  * @param {AWSCredentials} credentials - AWS credentials\n  *\n  updateCredentials(credentials: AWSCredentials) {\n      this.options.credentials = credentials;\n  }\n  */\n  /**\n   * Basic HTTP request. Customizable\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {string} method - Request HTTP method\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parsed_url, url, region, service, custom_header, params, libraryHeaders, userAgent, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            logger.debug(method, urlOrApiInfo);\n            region = 'us-east-1';\n            service = 'execute-api';\n            custom_header = undefined;\n            if (typeof urlOrApiInfo === 'string') {\n              parsed_url = this._parseUrl(urlOrApiInfo);\n              url = urlOrApiInfo;\n            } else {\n              url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service;\n              parsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n            }\n            params = {\n              method: method,\n              url: url,\n              host: parsed_url.host,\n              path: parsed_url.path,\n              headers: {},\n              data: null,\n              responseType: 'json',\n              timeout: 0,\n              cancelToken: null\n            };\n            libraryHeaders = {};\n            if (Platform.isReactNative) {\n              userAgent = Platform.userAgent || 'aws-amplify/0.1.x';\n              libraryHeaders = {\n                'User-Agent': userAgent\n              };\n            }\n            initParams = Object.assign({}, init);\n            isAllResponse = initParams.response;\n            if (initParams.body) {\n              if (typeof FormData === 'function' && initParams.body instanceof FormData) {\n                libraryHeaders['Content-Type'] = 'multipart/form-data';\n                params.data = initParams.body;\n              } else {\n                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n                params.data = JSON.stringify(initParams.body);\n              }\n            }\n            if (initParams.responseType) {\n              params.responseType = initParams.responseType;\n            }\n            if (initParams.withCredentials) {\n              params['withCredentials'] = initParams.withCredentials;\n            }\n            if (initParams.timeout) {\n              params.timeout = initParams.timeout;\n            }\n            if (initParams.cancellableToken) {\n              params.cancelToken = initParams.cancellableToken.token;\n            }\n            params['signerServiceInfo'] = initParams.signerServiceInfo;\n            if (!(typeof custom_header === 'function')) return [3 /*break*/, 2];\n            return [4 /*yield*/, custom_header()];\n          case 1:\n            _a = _c.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _a = undefined;\n            _c.label = 3;\n          case 3:\n            custom_header_obj = _a;\n            params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);\n            _b = parse(url, true, true), search = _b.search, parsedUrl = __rest(_b, [\"search\"]);\n            params.url = format(__assign(__assign({}, parsedUrl), {\n              query: __assign(__assign({}, parsedUrl.query), initParams.queryStringParameters || {})\n            }));\n            // Do not sign the request if client has added 'Authorization' header,\n            // which means custom authorizer.\n            if (typeof params.headers['Authorization'] !== 'undefined') {\n              params.headers = Object.keys(params.headers).reduce(function (acc, k) {\n                if (params.headers[k]) {\n                  acc[k] = params.headers[k];\n                }\n                return acc;\n                // tslint:disable-next-line:align\n              }, {});\n              return [2 /*return*/, this._request(params, isAllResponse)];\n            }\n            // Signing the request in case there credentials are available\n            return [2 /*return*/, this.Credentials.get().then(function (credentials) {\n              return _this._signed(__assign({}, params), credentials, isAllResponse, {\n                region: region,\n                service: service\n              }).catch(function (error) {\n                if (DateUtils.isClockSkewError(error)) {\n                  var headers = error.response.headers;\n                  var dateHeader = headers && (headers.date || headers.Date);\n                  var responseDate = new Date(dateHeader);\n                  var requestDate = DateUtils.getDateFromHeaderString(params.headers['x-amz-date']);\n                  // Compare local clock to the server clock\n                  if (DateUtils.isClockSkewed(responseDate)) {\n                    DateUtils.setClockOffset(responseDate.getTime() - requestDate.getTime());\n                    return _this.ajax(urlOrApiInfo, method, init);\n                  }\n                }\n                throw error;\n              });\n            }, function (err) {\n              logger.debug('No credentials available, the request will be unsigned');\n              return _this._request(params, isAllResponse);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * GET HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {JSON} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.get = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'GET', init);\n  };\n  /**\n   * PUT HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.put = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PUT', init);\n  };\n  /**\n   * PATCH HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.patch = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PATCH', init);\n  };\n  /**\n   * POST HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.post = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'POST', init);\n  };\n  /**\n   * DELETE HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.del = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'DELETE', init);\n  };\n  /**\n   * HEAD HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.head = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'HEAD', init);\n  };\n  /**\n   * Cancel an inflight API request\n   * @param {Promise<any>} request - The request promise to cancel\n   * @param {string} [message] - A message to include in the cancelation exception\n   */\n  RestClient.prototype.cancel = function (request, message) {\n    var source = this._cancelTokenMap.get(request);\n    if (source) {\n      source.cancel(message);\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n  RestClient.prototype.hasCancelToken = function (request) {\n    return this._cancelTokenMap.has(request);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  RestClient.prototype.isCancel = function (error) {\n    return axios.isCancel(error);\n  };\n  /**\n   * Retrieves a new and unique cancel token which can be\n   * provided in an axios request to be cancelled later.\n   */\n  RestClient.prototype.getCancellableToken = function () {\n    return axios.CancelToken.source();\n  };\n  /**\n   * Updates the weakmap with a response promise and its\n   * cancel token such that the cancel token can be easily\n   * retrieved (and used for cancelling the request)\n   */\n  RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {\n    this._cancelTokenMap.set(promise, cancelTokenSource);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  RestClient.prototype.endpoint = function (apiName) {\n    var _this = this;\n    var cloud_logic_array = this._options.endpoints;\n    var response = '';\n    if (!Array.isArray(cloud_logic_array)) {\n      return response;\n    }\n    cloud_logic_array.forEach(function (v) {\n      if (v.name === apiName) {\n        response = v.endpoint;\n        if (typeof v.region === 'string') {\n          _this._region = v.region;\n        } else if (typeof _this._options.region === 'string') {\n          _this._region = _this._options.region;\n        }\n        if (typeof v.service === 'string') {\n          _this._service = v.service || 'execute-api';\n        } else {\n          _this._service = 'execute-api';\n        }\n        if (typeof v.custom_header === 'function') {\n          _this._custom_header = v.custom_header;\n        } else {\n          _this._custom_header = undefined;\n        }\n      }\n    });\n    return response;\n  };\n  /** private methods **/\n  RestClient.prototype._signed = function (params, credentials, isAllResponse, _a) {\n    var service = _a.service,\n      region = _a.region;\n    var signerServiceInfoParams = params.signerServiceInfo,\n      otherParams = __rest(params, [\"signerServiceInfo\"]);\n    var endpoint_region = region || this._region || this._options.region;\n    var endpoint_service = service || this._service || this._options.service;\n    var creds = {\n      secret_key: credentials.secretAccessKey,\n      access_key: credentials.accessKeyId,\n      session_token: credentials.sessionToken\n    };\n    var endpointInfo = {\n      region: endpoint_region,\n      service: endpoint_service\n    };\n    var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);\n    var signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n    if (signed_params.data) {\n      signed_params.body = signed_params.data;\n    }\n    logger.debug('Signed Request: ', signed_params);\n    delete signed_params.headers['host'];\n    return axios(signed_params).then(function (response) {\n      return isAllResponse ? response : response.data;\n    }).catch(function (error) {\n      logger.debug(error);\n      throw error;\n    });\n  };\n  RestClient.prototype._request = function (params, isAllResponse) {\n    if (isAllResponse === void 0) {\n      isAllResponse = false;\n    }\n    return axios(params).then(function (response) {\n      return isAllResponse ? response : response.data;\n    }).catch(function (error) {\n      logger.debug(error);\n      throw error;\n    });\n  };\n  RestClient.prototype._parseUrl = function (url) {\n    var parts = url.split('/');\n    return {\n      host: parts[2],\n      path: '/' + parts.slice(3).join('/')\n    };\n  };\n  return RestClient;\n}();\nexport { RestClient };","map":{"version":3,"names":["ConsoleLogger","Logger","Credentials","DateUtils","Signer","Platform","axios","parse","format","logger","RestClient","options","_region","_service","_custom_header","undefined","_cancelTokenMap","_options","debug","WeakMap","prototype","ajax","urlOrApiInfo","method","init","region","service","custom_header","parsed_url","_parseUrl","url","endpoint","params","host","path","headers","data","responseType","timeout","cancelToken","libraryHeaders","isReactNative","userAgent","initParams","Object","assign","isAllResponse","response","body","FormData","JSON","stringify","withCredentials","cancellableToken","token","signerServiceInfo","_a","_c","sent","custom_header_obj","__assign","_b","search","parsedUrl","__rest","query","queryStringParameters","keys","reduce","acc","k","_request","get","then","credentials","_this","_signed","catch","error","isClockSkewError","dateHeader","date","Date","responseDate","requestDate","getDateFromHeaderString","isClockSkewed","setClockOffset","getTime","err","put","patch","post","del","head","cancel","request","message","source","hasCancelToken","has","isCancel","getCancellableToken","CancelToken","updateRequestToBeCancellable","promise","cancelTokenSource","set","apiName","cloud_logic_array","endpoints","Array","isArray","forEach","v","name","signerServiceInfoParams","otherParams","endpoint_region","endpoint_service","creds","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","endpointInfo","signed_params","sign","parts","split","slice","join"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\api-rest\\src\\RestClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n\tConsoleLogger as Logger,\n\tCredentials,\n\tDateUtils,\n\tSigner,\n\tPlatform,\n} from '@aws-amplify/core';\n\nimport { apiOptions, ApiInfo } from './types';\nimport axios, { CancelTokenSource } from 'axios';\nimport { parse, format } from 'url';\n\nconst logger = new Logger('RestClient');\n\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nexport class RestClient {\n\tprivate _options;\n\tprivate _region: string = 'us-east-1'; // this will be updated by endpoint function\n\tprivate _service: string = 'execute-api'; // this can be updated by endpoint function\n\tprivate _custom_header = undefined; // this can be updated by endpoint function\n\n\t/**\n\t * This weak map provides functionality to let clients cancel\n\t * in-flight axios requests. https://github.com/axios/axios#cancellation\n\t *\n\t * 1. For every axios request, a unique cancel token is generated and added in the request.\n\t * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n\t * 3. The promise is returned to the client.\n\t * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n\t * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n\t * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n\t * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n\t *\n\t * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n\t */\n\tprivate _cancelTokenMap: WeakMap<any, CancelTokenSource> = null;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * @param {RestClientOptions} [options] - Instance options\n\t */\n\tconstructor(options: apiOptions) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t\tif (this._cancelTokenMap == null) {\n\t\t\tthis._cancelTokenMap = new WeakMap();\n\t\t}\n\t}\n\n\t/**\n    * Update AWS credentials\n    * @param {AWSCredentials} credentials - AWS credentials\n    *\n    updateCredentials(credentials: AWSCredentials) {\n        this.options.credentials = credentials;\n    }\n*/\n\t/**\n\t * Basic HTTP request. Customizable\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {string} method - Request HTTP method\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync ajax(urlOrApiInfo: string | ApiInfo, method: string, init) {\n\t\tlogger.debug(method, urlOrApiInfo);\n\n\t\tlet parsed_url;\n\t\tlet url: string;\n\t\tlet region: string = 'us-east-1';\n\t\tlet service: string = 'execute-api';\n\t\tlet custom_header: () => {\n\t\t\t[key: string]: string;\n\t\t} = undefined;\n\n\t\tif (typeof urlOrApiInfo === 'string') {\n\t\t\tparsed_url = this._parseUrl(urlOrApiInfo);\n\t\t\turl = urlOrApiInfo;\n\t\t} else {\n\t\t\t({ endpoint: url, custom_header, region, service } = urlOrApiInfo);\n\t\t\tparsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n\t\t}\n\n\t\tconst params = {\n\t\t\tmethod,\n\t\t\turl,\n\t\t\thost: parsed_url.host,\n\t\t\tpath: parsed_url.path,\n\t\t\theaders: {},\n\t\t\tdata: null,\n\t\t\tresponseType: 'json',\n\t\t\ttimeout: 0,\n\t\t\tcancelToken: null,\n\t\t};\n\n\t\tlet libraryHeaders = {};\n\n\t\tif (Platform.isReactNative) {\n\t\t\tconst userAgent = Platform.userAgent || 'aws-amplify/0.1.x';\n\t\t\tlibraryHeaders = {\n\t\t\t\t'User-Agent': userAgent,\n\t\t\t};\n\t\t}\n\n\t\tconst initParams = Object.assign({}, init);\n\t\tconst isAllResponse = initParams.response;\n\t\tif (initParams.body) {\n\t\t\tif (\n\t\t\t\ttypeof FormData === 'function' &&\n\t\t\t\tinitParams.body instanceof FormData\n\t\t\t) {\n\t\t\t\tlibraryHeaders['Content-Type'] = 'multipart/form-data';\n\t\t\t\tparams.data = initParams.body;\n\t\t\t} else {\n\t\t\t\tlibraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n\t\t\t\tparams.data = JSON.stringify(initParams.body);\n\t\t\t}\n\t\t}\n\t\tif (initParams.responseType) {\n\t\t\tparams.responseType = initParams.responseType;\n\t\t}\n\t\tif (initParams.withCredentials) {\n\t\t\tparams['withCredentials'] = initParams.withCredentials;\n\t\t}\n\t\tif (initParams.timeout) {\n\t\t\tparams.timeout = initParams.timeout;\n\t\t}\n\t\tif (initParams.cancellableToken) {\n\t\t\tparams.cancelToken = initParams.cancellableToken.token;\n\t\t}\n\n\t\tparams['signerServiceInfo'] = initParams.signerServiceInfo;\n\n\t\t// custom_header callback\n\t\tconst custom_header_obj =\n\t\t\ttypeof custom_header === 'function' ? await custom_header() : undefined;\n\n\t\tparams.headers = {\n\t\t\t...libraryHeaders,\n\t\t\t...custom_header_obj,\n\t\t\t...initParams.headers,\n\t\t};\n\n\t\t// Intentionally discarding search\n\t\tconst { search, ...parsedUrl } = parse(url, true, true);\n\t\tparams.url = format({\n\t\t\t...parsedUrl,\n\t\t\tquery: {\n\t\t\t\t...parsedUrl.query,\n\t\t\t\t...(initParams.queryStringParameters || {}),\n\t\t\t},\n\t\t});\n\n\t\t// Do not sign the request if client has added 'Authorization' header,\n\t\t// which means custom authorizer.\n\t\tif (typeof params.headers['Authorization'] !== 'undefined') {\n\t\t\tparams.headers = Object.keys(params.headers).reduce((acc, k) => {\n\t\t\t\tif (params.headers[k]) {\n\t\t\t\t\tacc[k] = params.headers[k];\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t\t// tslint:disable-next-line:align\n\t\t\t}, {});\n\t\t\treturn this._request(params, isAllResponse);\n\t\t}\n\n\t\t// Signing the request in case there credentials are available\n\t\treturn this.Credentials.get().then(\n\t\t\tcredentials => {\n\t\t\t\treturn this._signed({ ...params }, credentials, isAllResponse, {\n\t\t\t\t\tregion,\n\t\t\t\t\tservice,\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (DateUtils.isClockSkewError(error)) {\n\t\t\t\t\t\tconst { headers } = error.response;\n\t\t\t\t\t\tconst dateHeader = headers && (headers.date || headers.Date);\n\t\t\t\t\t\tconst responseDate = new Date(dateHeader);\n\t\t\t\t\t\tconst requestDate = DateUtils.getDateFromHeaderString(\n\t\t\t\t\t\t\tparams.headers['x-amz-date']\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Compare local clock to the server clock\n\t\t\t\t\t\tif (DateUtils.isClockSkewed(responseDate)) {\n\t\t\t\t\t\t\tDateUtils.setClockOffset(\n\t\t\t\t\t\t\t\tresponseDate.getTime() - requestDate.getTime()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturn this.ajax(urlOrApiInfo, method, init);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tlogger.debug('No credentials available, the request will be unsigned');\n\t\t\t\treturn this._request(params, isAllResponse);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * GET HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {JSON} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'GET', init);\n\t}\n\n\t/**\n\t * PUT HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'PUT', init);\n\t}\n\n\t/**\n\t * PATCH HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'PATCH', init);\n\t}\n\n\t/**\n\t * POST HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'POST', init);\n\t}\n\n\t/**\n\t * DELETE HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'DELETE', init);\n\t}\n\n\t/**\n\t * HEAD HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'HEAD', init);\n\t}\n\n\t/**\n\t * Cancel an inflight API request\n\t * @param {Promise<any>} request - The request promise to cancel\n\t * @param {string} [message] - A message to include in the cancelation exception\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\tconst source = this._cancelTokenMap.get(request);\n\t\tif (source) {\n\t\t\tsource.cancel(message);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if the request has a corresponding cancel token in the WeakMap.\n\t * @params request - The request promise\n\t * @return if the request has a corresponding cancel token.\n\t */\n\thasCancelToken(request: Promise<any>) {\n\t\treturn this._cancelTokenMap.has(request);\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error): boolean {\n\t\treturn axios.isCancel(error);\n\t}\n\n\t/**\n\t * Retrieves a new and unique cancel token which can be\n\t * provided in an axios request to be cancelled later.\n\t */\n\tgetCancellableToken(): CancelTokenSource {\n\t\treturn axios.CancelToken.source();\n\t}\n\n\t/**\n\t * Updates the weakmap with a response promise and its\n\t * cancel token such that the cancel token can be easily\n\t * retrieved (and used for cancelling the request)\n\t */\n\tupdateRequestToBeCancellable(\n\t\tpromise: Promise<any>,\n\t\tcancelTokenSource: CancelTokenSource\n\t) {\n\t\tthis._cancelTokenMap.set(promise, cancelTokenSource);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tendpoint(apiName: string) {\n\t\tconst cloud_logic_array = this._options.endpoints;\n\t\tlet response = '';\n\n\t\tif (!Array.isArray(cloud_logic_array)) {\n\t\t\treturn response;\n\t\t}\n\n\t\tcloud_logic_array.forEach(v => {\n\t\t\tif (v.name === apiName) {\n\t\t\t\tresponse = v.endpoint;\n\t\t\t\tif (typeof v.region === 'string') {\n\t\t\t\t\tthis._region = v.region;\n\t\t\t\t} else if (typeof this._options.region === 'string') {\n\t\t\t\t\tthis._region = this._options.region;\n\t\t\t\t}\n\t\t\t\tif (typeof v.service === 'string') {\n\t\t\t\t\tthis._service = v.service || 'execute-api';\n\t\t\t\t} else {\n\t\t\t\t\tthis._service = 'execute-api';\n\t\t\t\t}\n\t\t\t\tif (typeof v.custom_header === 'function') {\n\t\t\t\t\tthis._custom_header = v.custom_header;\n\t\t\t\t} else {\n\t\t\t\t\tthis._custom_header = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn response;\n\t}\n\n\t/** private methods **/\n\n\tprivate _signed(params, credentials, isAllResponse, { service, region }) {\n\t\tconst { signerServiceInfo: signerServiceInfoParams, ...otherParams } =\n\t\t\tparams;\n\n\t\tconst endpoint_region: string =\n\t\t\tregion || this._region || this._options.region;\n\t\tconst endpoint_service: string =\n\t\t\tservice || this._service || this._options.service;\n\n\t\tconst creds = {\n\t\t\tsecret_key: credentials.secretAccessKey,\n\t\t\taccess_key: credentials.accessKeyId,\n\t\t\tsession_token: credentials.sessionToken,\n\t\t};\n\n\t\tconst endpointInfo = {\n\t\t\tregion: endpoint_region,\n\t\t\tservice: endpoint_service,\n\t\t};\n\n\t\tconst signerServiceInfo = Object.assign(\n\t\t\tendpointInfo,\n\t\t\tsignerServiceInfoParams\n\t\t);\n\n\t\tconst signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n\n\t\tif (signed_params.data) {\n\t\t\tsigned_params.body = signed_params.data;\n\t\t}\n\n\t\tlogger.debug('Signed Request: ', signed_params);\n\n\t\tdelete signed_params.headers['host'];\n\n\t\treturn axios(signed_params)\n\t\t\t.then(response => (isAllResponse ? response : response.data))\n\t\t\t.catch(error => {\n\t\t\t\tlogger.debug(error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tprivate _request(params, isAllResponse = false) {\n\t\treturn axios(params)\n\t\t\t.then(response => (isAllResponse ? response : response.data))\n\t\t\t.catch(error => {\n\t\t\t\tlogger.debug(error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tprivate _parseUrl(url) {\n\t\tconst parts = url.split('/');\n\n\t\treturn {\n\t\t\thost: parts[2],\n\t\t\tpath: '/' + parts.slice(3).join('/'),\n\t\t};\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}