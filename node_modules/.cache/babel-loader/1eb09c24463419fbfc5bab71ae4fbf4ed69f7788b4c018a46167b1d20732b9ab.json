{"ast":null,"code":"/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar Mutex = /** @class */function () {\n  function Mutex() {\n    this._queue = [];\n    this._pending = false;\n  }\n  Mutex.prototype.isLocked = function () {\n    return this._pending;\n  };\n  Mutex.prototype.acquire = function () {\n    var _this = this;\n    var ticket = new Promise(function (resolve) {\n      return _this._queue.push(resolve);\n    });\n    if (!this._pending) {\n      this._dispatchNext();\n    }\n    return ticket;\n  };\n  Mutex.prototype.runExclusive = function (callback) {\n    return this.acquire().then(function (release) {\n      var result;\n      try {\n        result = callback();\n      } catch (e) {\n        release();\n        throw e;\n      }\n      return Promise.resolve(result).then(function (x) {\n        return release(), x;\n      }, function (e) {\n        release();\n        throw e;\n      });\n    });\n  };\n  Mutex.prototype._dispatchNext = function () {\n    if (this._queue.length > 0) {\n      this._pending = true;\n      this._queue.shift()(this._dispatchNext.bind(this));\n    } else {\n      this._pending = false;\n    }\n  };\n  return Mutex;\n}();\nexport default Mutex;","map":{"version":3,"names":["Mutex","_queue","_pending","prototype","isLocked","acquire","_this","ticket","Promise","resolve","push","_dispatchNext","runExclusive","callback","then","release","result","e","x","length","shift","bind"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\core\\src\\Util\\Mutex.ts"],"sourcesContent":["/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\ninterface MutexInterface {\n\tacquire(): Promise<MutexInterface.Releaser>;\n\n\trunExclusive<T>(callback: MutexInterface.Worker<T>): Promise<T>;\n\n\tisLocked(): boolean;\n}\n\nnamespace MutexInterface {\n\texport interface Releaser {\n\t\t(): void;\n\t}\n\n\texport interface Worker<T> {\n\t\t(): Promise<T> | T;\n\t}\n}\n\nclass Mutex implements MutexInterface {\n\tisLocked(): boolean {\n\t\treturn this._pending;\n\t}\n\n\tacquire(): Promise<MutexInterface.Releaser> {\n\t\tconst ticket = new Promise<MutexInterface.Releaser>(resolve =>\n\t\t\tthis._queue.push(resolve)\n\t\t);\n\n\t\tif (!this._pending) {\n\t\t\tthis._dispatchNext();\n\t\t}\n\n\t\treturn ticket;\n\t}\n\n\trunExclusive<T>(callback: MutexInterface.Worker<T>): Promise<T> {\n\t\treturn this.acquire().then(release => {\n\t\t\tlet result: T | Promise<T>;\n\n\t\t\ttry {\n\t\t\t\tresult = callback();\n\t\t\t} catch (e) {\n\t\t\t\trelease();\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn Promise.resolve(result).then(\n\t\t\t\t(x: T) => (release(), x),\n\t\t\t\te => {\n\t\t\t\t\trelease();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate _dispatchNext(): void {\n\t\tif (this._queue.length > 0) {\n\t\t\tthis._pending = true;\n\t\t\tthis._queue.shift()!(this._dispatchNext.bind(this));\n\t\t} else {\n\t\t\tthis._pending = false;\n\t\t}\n\t}\n\n\tprivate _queue: Array<(release: MutexInterface.Releaser) => void> = [];\n\tprivate _pending = false;\n}\n\nexport default Mutex;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAAA,KAAA;EAAA,SAAAA,MAAA;IA+CS,KAAAC,MAAM,GAAsD,EAAE;IAC9D,KAAAC,QAAQ,GAAG,KAAK;EACzB;EAhDCF,KAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR;IACC,OAAO,IAAI,CAACF,QAAQ;EACrB,CAAC;EAEDF,KAAA,CAAAG,SAAA,CAAAE,OAAO,GAAP;IAAA,IAAAC,KAAA;IACC,IAAMC,MAAM,GAAG,IAAIC,OAAO,CAA0B,UAAAC,OAAO;MAC1D,OAAAH,KAAI,CAACL,MAAM,CAACS,IAAI,CAACD,OAAO,CAAC;IAAzB,CAAyB,CACzB;IAED,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE;MACnB,IAAI,CAACS,aAAa,EAAE;;IAGrB,OAAOJ,MAAM;EACd,CAAC;EAEDP,KAAA,CAAAG,SAAA,CAAAS,YAAY,GAAZ,UAAgBC,QAAkC;IACjD,OAAO,IAAI,CAACR,OAAO,EAAE,CAACS,IAAI,CAAC,UAAAC,OAAO;MACjC,IAAIC,MAAsB;MAE1B,IAAI;QACHA,MAAM,GAAGH,QAAQ,EAAE;OACnB,CAAC,OAAOI,CAAC,EAAE;QACXF,OAAO,EAAE;QACT,MAAME,CAAC;;MAGR,OAAOT,OAAO,CAACC,OAAO,CAACO,MAAM,CAAC,CAACF,IAAI,CAClC,UAACI,CAAI;QAAK,OAACH,OAAO,EAAE,EAAEG,CAAC;MAAb,CAAc,EACxB,UAAAD,CAAC;QACAF,OAAO,EAAE;QACT,MAAME,CAAC;MACR,CAAC,CACD;IACF,CAAC,CAAC;EACH,CAAC;EAEOjB,KAAA,CAAAG,SAAA,CAAAQ,aAAa,GAArB;IACC,IAAI,IAAI,CAACV,MAAM,CAACkB,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACjB,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACD,MAAM,CAACmB,KAAK,EAAG,CAAC,IAAI,CAACT,aAAa,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;KACnD,MAAM;MACN,IAAI,CAACnB,QAAQ,GAAG,KAAK;;EAEvB,CAAC;EAIF,OAAAF,KAAC;AAAD,CAAC,CAjDD;AAmDA,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}