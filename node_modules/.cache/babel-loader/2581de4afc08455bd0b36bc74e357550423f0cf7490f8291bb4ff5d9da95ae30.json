{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketLocationOutput, GetBucketLocationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketLocationCommand, serializeAws_restXmlGetBucketLocationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns the Region the bucket resides in. You set the bucket's Region using the\n *             <code>LocationConstraint</code> request parameter in a <code>CreateBucket</code>\n *          request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>.</p>\n *\n *          <p> To use this implementation of the operation, you must be the bucket owner.</p>\n *\n *          <p>The following operations are related to <code>GetBucketLocation</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar GetBucketLocationCommand = /** @class */function (_super) {\n  __extends(GetBucketLocationCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetBucketLocationCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetBucketLocationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketLocationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketLocationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketLocationOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetBucketLocationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketLocationCommand(input, context);\n  };\n  GetBucketLocationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketLocationCommand(output, context);\n  };\n  return GetBucketLocationCommand;\n}($Command);\nexport { GetBucketLocationCommand };","map":{"version":3,"names":["GetBucketLocationOutput","GetBucketLocationRequest","deserializeAws_restXmlGetBucketLocationCommand","serializeAws_restXmlGetBucketLocationCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","GetBucketLocationCommand","_super","__extends","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-s3\\commands\\GetBucketLocationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { GetBucketLocationOutput, GetBucketLocationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlGetBucketLocationCommand,\n  serializeAws_restXmlGetBucketLocationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetBucketLocationCommandInput = GetBucketLocationRequest;\nexport type GetBucketLocationCommandOutput = GetBucketLocationOutput & __MetadataBearer;\n\n/**\n * <p>Returns the Region the bucket resides in. You set the bucket's Region using the\n *             <code>LocationConstraint</code> request parameter in a <code>CreateBucket</code>\n *          request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>.</p>\n *\n *          <p> To use this implementation of the operation, you must be the bucket owner.</p>\n *\n *          <p>The following operations are related to <code>GetBucketLocation</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class GetBucketLocationCommand extends $Command<\n  GetBucketLocationCommandInput,\n  GetBucketLocationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetBucketLocationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetBucketLocationCommandInput, GetBucketLocationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetBucketLocationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetBucketLocationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketLocationOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetBucketLocationCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlGetBucketLocationCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetBucketLocationCommandOutput> {\n    return deserializeAws_restXmlGetBucketLocationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"],"mappings":";AACA,SAASA,uBAAuB,EAAEC,wBAAwB,QAAQ,oBAAoB;AACtF,SACEC,8CAA8C,EAC9CC,4CAA4C,QACvC,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAAC,wBAAA,0BAAAC,MAAA;EAA8CC,SAAA,CAAAF,wBAAA,EAAAC,MAAA;EAK5C;EACA;EAEA,SAAAD,yBAAqBG,KAAoC;IAAzD,IAAAC,KAAA;IACE;IACAH,MAAA,CAAAI,IAAA,MAAO;IAFYD,KAAA,CAAAD,KAAK,GAALA,KAAK;;IAGxB;EACF;EAEA;;;EAGAH,wBAAA,CAAAM,SAAA,CAAAC,iBAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACf,cAAc,CAACY,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAAChB,uBAAuB,CAACa,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,IAAAM,MAAM,GAAKR,aAAa,CAAAQ,MAAlB;IACd,IAAMC,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,0BAA0B;IAC9C,IAAMC,uBAAuB,GAA4B;MACvDH,MAAM,EAAAA,MAAA;MACNC,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,uBAAuB,EAAE5B,wBAAwB,CAAC6B,kBAAkB;MACpEC,wBAAwB,EAAE/B,uBAAuB,CAAC8B;KACnD;IACO,IAAAE,cAAc,GAAKf,aAAa,CAAAe,cAAlB;IACtB,OAAOT,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,OAAAF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxEU,uBAAuB,CACxB;EACH,CAAC;EAEOpB,wBAAA,CAAAM,SAAA,CAAAO,SAAS,GAAjB,UAAkBV,KAAoC,EAAEyB,OAAuB;IAC7E,OAAOjC,4CAA4C,CAACQ,KAAK,EAAEyB,OAAO,CAAC;EACrE,CAAC;EAEO5B,wBAAA,CAAAM,SAAA,CAAAQ,WAAW,GAAnB,UAAoBe,MAAsB,EAAED,OAAuB;IACjE,OAAOlC,8CAA8C,CAACmC,MAAM,EAAED,OAAO,CAAC;EACxE,CAAC;EAIH,OAAA5B,wBAAC;AAAD,CAAC,CAvD6CD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}