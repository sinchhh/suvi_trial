{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetIdentityPoolRolesInput, GetIdentityPoolRolesResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1GetIdentityPoolRolesCommand, serializeAws_json1_1GetIdentityPoolRolesCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Gets the roles for an identity pool.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nvar GetIdentityPoolRolesCommand = /** @class */function (_super) {\n  __extends(GetIdentityPoolRolesCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetIdentityPoolRolesCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetIdentityPoolRolesCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"CognitoIdentityClient\";\n    var commandName = \"GetIdentityPoolRolesCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetIdentityPoolRolesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetIdentityPoolRolesResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetIdentityPoolRolesCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1GetIdentityPoolRolesCommand(input, context);\n  };\n  GetIdentityPoolRolesCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommand(output, context);\n  };\n  return GetIdentityPoolRolesCommand;\n}($Command);\nexport { GetIdentityPoolRolesCommand };","map":{"version":3,"names":["GetIdentityPoolRolesInput","GetIdentityPoolRolesResponse","deserializeAws_json1_1GetIdentityPoolRolesCommand","serializeAws_json1_1GetIdentityPoolRolesCommand","getSerdePlugin","getAwsAuthPlugin","Command","$Command","GetIdentityPoolRolesCommand","_super","__extends","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-cognito-identity\\commands\\GetIdentityPoolRolesCommand.ts"],"sourcesContent":["import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetIdentityPoolRolesInput, GetIdentityPoolRolesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetIdentityPoolRolesCommand,\n  serializeAws_json1_1GetIdentityPoolRolesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetIdentityPoolRolesCommandInput = GetIdentityPoolRolesInput;\nexport type GetIdentityPoolRolesCommandOutput = GetIdentityPoolRolesResponse & __MetadataBearer;\n\n/**\n * <p>Gets the roles for an identity pool.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class GetIdentityPoolRolesCommand extends $Command<\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetIdentityPoolRolesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetIdentityPoolRolesCommandInput, GetIdentityPoolRolesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetIdentityPoolRolesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetIdentityPoolRolesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetIdentityPoolRolesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetIdentityPoolRolesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetIdentityPoolRolesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetIdentityPoolRolesCommandOutput> {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"],"mappings":";AACA,SAASA,yBAAyB,EAAEC,4BAA4B,QAAQ,oBAAoB;AAC5F,SACEC,iDAAiD,EACjDC,+CAA+C,QAC1C,0BAA0B;AACjC,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;AAIA,IAAAC,2BAAA,0BAAAC,MAAA;EAAiDC,SAAA,CAAAF,2BAAA,EAAAC,MAAA;EAK/C;EACA;EAEA,SAAAD,4BAAqBG,KAAuC;IAA5D,IAAAC,KAAA;IACE;IACAH,MAAA,CAAAI,IAAA,MAAO;IAFYD,KAAA,CAAAD,KAAK,GAALA,KAAK;;IAGxB;EACF;EAEA;;;EAGAH,2BAAA,CAAAM,SAAA,CAAAC,iBAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAkD,EAClDC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAAChB,cAAc,CAACa,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACf,gBAAgB,CAACY,aAAa,CAAC,CAAC;IAEzD,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,IAAAM,MAAM,GAAKR,aAAa,CAAAQ,MAAlB;IACd,IAAMC,UAAU,GAAG,uBAAuB;IAC1C,IAAMC,WAAW,GAAG,6BAA6B;IACjD,IAAMC,uBAAuB,GAA4B;MACvDH,MAAM,EAAAA,MAAA;MACNC,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,uBAAuB,EAAE7B,yBAAyB,CAAC8B,kBAAkB;MACrEC,wBAAwB,EAAE9B,4BAA4B,CAAC6B;KACxD;IACO,IAAAE,cAAc,GAAKf,aAAa,CAAAe,cAAlB;IACtB,OAAOT,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,OAAAF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxEU,uBAAuB,CACxB;EACH,CAAC;EAEOpB,2BAAA,CAAAM,SAAA,CAAAO,SAAS,GAAjB,UAAkBV,KAAuC,EAAEyB,OAAuB;IAChF,OAAOjC,+CAA+C,CAACQ,KAAK,EAAEyB,OAAO,CAAC;EACxE,CAAC;EAEO5B,2BAAA,CAAAM,SAAA,CAAAQ,WAAW,GAAnB,UAAoBe,MAAsB,EAAED,OAAuB;IACjE,OAAOlC,iDAAiD,CAACmC,MAAM,EAAED,OAAO,CAAC;EAC3E,CAAC;EAIH,OAAA5B,2BAAC;AAAD,CAAC,CAvDgDD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}