{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign } from \"tslib\";\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */function () {\n  /**\n   * @constructor\n   * Initialize with configurations\n   * @param {Object} options\n   */\n  function I18n(options) {\n    /**\n     * @private\n     */\n    this._options = null;\n    /**\n     * @private\n     */\n    this._lang = null;\n    /**\n     * @private\n     */\n    this._dict = {};\n    this._options = Object.assign({}, options);\n    this._lang = this._options.language;\n    if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n      this._lang = window.navigator.language;\n    }\n    logger.debug(this._lang);\n  }\n  /**\n   * @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  I18n.prototype.setLanguage = function (lang) {\n    this._lang = lang;\n  };\n  /**\n   * @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  I18n.prototype.get = function (key, defVal) {\n    if (defVal === void 0) {\n      defVal = undefined;\n    }\n    if (!this._lang) {\n      return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    var lang = this._lang;\n    var val = this.getByLanguage(key, lang);\n    if (val) {\n      return val;\n    }\n    if (lang.indexOf('-') > 0) {\n      val = this.getByLanguage(key, lang.split('-')[0]);\n    }\n    if (val) {\n      return val;\n    }\n    return typeof defVal !== 'undefined' ? defVal : key;\n  };\n  /**\n   * @method\n   * Get value according to specified language\n   * @param {String} key\n   * @param {String} language - Specified langurage to be used\n   * @param {String} defVal - Default value\n   */\n  I18n.prototype.getByLanguage = function (key, language, defVal) {\n    if (defVal === void 0) {\n      defVal = null;\n    }\n    if (!language) {\n      return defVal;\n    }\n    var lang_dict = this._dict[language];\n    if (!lang_dict) {\n      return defVal;\n    }\n    return lang_dict[key];\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n    var lang_dict = this._dict[language];\n    if (!lang_dict) {\n      lang_dict = this._dict[language] = {};\n    }\n    this._dict[language] = __assign(__assign({}, lang_dict), vocabularies);\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  I18n.prototype.putVocabularies = function (vocabularies) {\n    var _this = this;\n    Object.keys(vocabularies).map(function (key) {\n      _this.putVocabulariesForLanguage(key, vocabularies[key]);\n    });\n  };\n  return I18n;\n}();\nexport { I18n };","map":{"version":3,"names":["ConsoleLogger","Logger","logger","I18n","options","_options","_lang","_dict","Object","assign","language","window","navigator","debug","prototype","setLanguage","lang","get","key","defVal","undefined","val","getByLanguage","indexOf","split","lang_dict","putVocabulariesForLanguage","vocabularies","__assign","putVocabularies","_this","keys","map"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\core\\src\\I18n\\I18n.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { I18nOptions } from './types';\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('I18n');\n\n/**\n * Language transition class\n */\nexport class I18n {\n\t/**\n\t * @private\n\t */\n\t_options: I18nOptions = null;\n\n\t/**\n\t * @private\n\t */\n\t_lang = null;\n\n\t/**\n\t * @private\n\t */\n\t_dict = {};\n\n\t/**\n\t * @constructor\n\t * Initialize with configurations\n\t * @param {Object} options\n\t */\n\tconstructor(options: I18nOptions) {\n\t\tthis._options = Object.assign({}, options);\n\t\tthis._lang = this._options.language;\n\n\t\tif (\n\t\t\t!this._lang &&\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow &&\n\t\t\twindow.navigator\n\t\t) {\n\t\t\tthis._lang = window.navigator.language;\n\t\t}\n\n\t\tlogger.debug(this._lang);\n\t}\n\n\t/**\n\t * @method\n\t * Explicitly setting language\n\t * @param {String} lang\n\t */\n\tsetLanguage(lang: string) {\n\t\tthis._lang = lang;\n\t}\n\n\t/**\n\t * @method\n\t * Get value\n\t * @param {String} key\n\t * @param {String} defVal - Default value\n\t */\n\tget(key, defVal = undefined) {\n\t\tif (!this._lang) {\n\t\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t\t}\n\n\t\tconst lang = this._lang;\n\t\tlet val = this.getByLanguage(key, lang);\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\tif (lang.indexOf('-') > 0) {\n\t\t\tval = this.getByLanguage(key, lang.split('-')[0]);\n\t\t}\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t}\n\n\t/**\n\t * @method\n\t * Get value according to specified language\n\t * @param {String} key\n\t * @param {String} language - Specified langurage to be used\n\t * @param {String} defVal - Default value\n\t */\n\tgetByLanguage(key, language, defVal = null) {\n\t\tif (!language) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\tconst lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\treturn lang_dict[key];\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {String} language - Language of the dictionary\n\t * @param {Object} vocabularies - Object that has key-value as dictionary entry\n\t */\n\tputVocabulariesForLanguage(language, vocabularies) {\n\t\tlet lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\tlang_dict = this._dict[language] = {};\n\t\t}\n\t\tthis._dict[language] = { ...lang_dict, ...vocabularies };\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {Object} vocabularies - Object that has language as key,\n\t *                                vocabularies of each language as value\n\t */\n\tputVocabularies(vocabularies) {\n\t\tObject.keys(vocabularies).map(key => {\n\t\t\tthis.putVocabulariesForLanguage(key, vocabularies[key]);\n\t\t});\n\t}\n}\n"],"mappings":"AAAA;AACA;;AAGA,SAASA,aAAa,IAAIC,MAAM,QAAQ,WAAW;AAEnD,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,MAAM,CAAC;AAEjC;;;AAGA,IAAAE,IAAA;EAgBC;;;;;EAKA,SAAAA,KAAYC,OAAoB;IApBhC;;;IAGA,KAAAC,QAAQ,GAAgB,IAAI;IAE5B;;;IAGA,KAAAC,KAAK,GAAG,IAAI;IAEZ;;;IAGA,KAAAC,KAAK,GAAG,EAAE;IAQT,IAAI,CAACF,QAAQ,GAAGG,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,OAAO,CAAC;IAC1C,IAAI,CAACE,KAAK,GAAG,IAAI,CAACD,QAAQ,CAACK,QAAQ;IAEnC,IACC,CAAC,IAAI,CAACJ,KAAK,IACX,OAAOK,MAAM,KAAK,WAAW,IAC7BA,MAAM,IACNA,MAAM,CAACC,SAAS,EACf;MACD,IAAI,CAACN,KAAK,GAAGK,MAAM,CAACC,SAAS,CAACF,QAAQ;;IAGvCR,MAAM,CAACW,KAAK,CAAC,IAAI,CAACP,KAAK,CAAC;EACzB;EAEA;;;;;EAKAH,IAAA,CAAAW,SAAA,CAAAC,WAAW,GAAX,UAAYC,IAAY;IACvB,IAAI,CAACV,KAAK,GAAGU,IAAI;EAClB,CAAC;EAED;;;;;;EAMAb,IAAA,CAAAW,SAAA,CAAAG,GAAG,GAAH,UAAIC,GAAG,EAAEC,MAAkB;IAAlB,IAAAA,MAAA;MAAAA,MAAA,GAAAC,SAAkB;IAAA;IAC1B,IAAI,CAAC,IAAI,CAACd,KAAK,EAAE;MAChB,OAAO,OAAOa,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGD,GAAG;;IAGpD,IAAMF,IAAI,GAAG,IAAI,CAACV,KAAK;IACvB,IAAIe,GAAG,GAAG,IAAI,CAACC,aAAa,CAACJ,GAAG,EAAEF,IAAI,CAAC;IACvC,IAAIK,GAAG,EAAE;MACR,OAAOA,GAAG;;IAGX,IAAIL,IAAI,CAACO,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MAC1BF,GAAG,GAAG,IAAI,CAACC,aAAa,CAACJ,GAAG,EAAEF,IAAI,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;IAElD,IAAIH,GAAG,EAAE;MACR,OAAOA,GAAG;;IAGX,OAAO,OAAOF,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGD,GAAG;EACpD,CAAC;EAED;;;;;;;EAOAf,IAAA,CAAAW,SAAA,CAAAQ,aAAa,GAAb,UAAcJ,GAAG,EAAER,QAAQ,EAAES,MAAa;IAAb,IAAAA,MAAA;MAAAA,MAAA,OAAa;IAAA;IACzC,IAAI,CAACT,QAAQ,EAAE;MACd,OAAOS,MAAM;;IAGd,IAAMM,SAAS,GAAG,IAAI,CAAClB,KAAK,CAACG,QAAQ,CAAC;IACtC,IAAI,CAACe,SAAS,EAAE;MACf,OAAON,MAAM;;IAGd,OAAOM,SAAS,CAACP,GAAG,CAAC;EACtB,CAAC;EAED;;;;;;EAMAf,IAAA,CAAAW,SAAA,CAAAY,0BAA0B,GAA1B,UAA2BhB,QAAQ,EAAEiB,YAAY;IAChD,IAAIF,SAAS,GAAG,IAAI,CAAClB,KAAK,CAACG,QAAQ,CAAC;IACpC,IAAI,CAACe,SAAS,EAAE;MACfA,SAAS,GAAG,IAAI,CAAClB,KAAK,CAACG,QAAQ,CAAC,GAAG,EAAE;;IAEtC,IAAI,CAACH,KAAK,CAACG,QAAQ,CAAC,GAAAkB,QAAA,CAAAA,QAAA,KAAQH,SAAS,GAAKE,YAAY,CAAE;EACzD,CAAC;EAED;;;;;;EAMAxB,IAAA,CAAAW,SAAA,CAAAe,eAAe,GAAf,UAAgBF,YAAY;IAA5B,IAAAG,KAAA;IACCtB,MAAM,CAACuB,IAAI,CAACJ,YAAY,CAAC,CAACK,GAAG,CAAC,UAAAd,GAAG;MAChCY,KAAI,CAACJ,0BAA0B,CAACR,GAAG,EAAES,YAAY,CAACT,GAAG,CAAC,CAAC;IACxD,CAAC,CAAC;EACH,CAAC;EACF,OAAAf,IAAC;AAAD,CAAC,CAtHD"},"metadata":{},"sourceType":"module","externalDependencies":[]}