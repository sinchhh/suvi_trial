{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketEncryptionRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketEncryptionCommand, serializeAws_restXmlPutBucketEncryptionCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This operation uses the <code>encryption</code> subresource to configure default\n *          encryption and Amazon S3 Bucket Key for an existing bucket.</p>\n *          <p>Default encryption for a bucket can use server-side encryption with Amazon S3-managed keys\n *          (SSE-S3) or AWS KMS customer master keys (SSE-KMS). If you specify default encryption\n *          using SSE-KMS, you can also configure Amazon S3 Bucket Key. For information about default\n *          encryption, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html\">Amazon S3 default bucket encryption</a>\n *          in the <i>Amazon Simple Storage Service Developer Guide</i>. For more information about S3 Bucket Keys,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html\">Amazon S3 Bucket Keys</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <important>\n *             <p>This operation requires AWS Signature Version 4. For more information, see <a href=\"sig-v4-authenticating-requests.html\"> Authenticating Requests (AWS Signature\n *                Version 4)</a>. </p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutEncryptionConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide. </p>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html\">GetBucketEncryption</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html\">DeleteBucketEncryption</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketEncryptionCommand = /** @class */function (_super) {\n  __extends(PutBucketEncryptionCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function PutBucketEncryptionCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  PutBucketEncryptionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketEncryptionCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketEncryptionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  PutBucketEncryptionCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketEncryptionCommand(input, context);\n  };\n  PutBucketEncryptionCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketEncryptionCommand(output, context);\n  };\n  return PutBucketEncryptionCommand;\n}($Command);\nexport { PutBucketEncryptionCommand };","map":{"version":3,"names":["PutBucketEncryptionRequest","deserializeAws_restXmlPutBucketEncryptionCommand","serializeAws_restXmlPutBucketEncryptionCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","PutBucketEncryptionCommand","_super","__extends","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","requestHandler","resolve","request","handle","context"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-sdk\\client-s3\\commands\\PutBucketEncryptionCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketEncryptionRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketEncryptionCommand,\n  serializeAws_restXmlPutBucketEncryptionCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketEncryptionCommandInput = PutBucketEncryptionRequest;\nexport type PutBucketEncryptionCommandOutput = __MetadataBearer;\n\n/**\n * <p>This operation uses the <code>encryption</code> subresource to configure default\n *          encryption and Amazon S3 Bucket Key for an existing bucket.</p>\n *          <p>Default encryption for a bucket can use server-side encryption with Amazon S3-managed keys\n *          (SSE-S3) or AWS KMS customer master keys (SSE-KMS). If you specify default encryption\n *          using SSE-KMS, you can also configure Amazon S3 Bucket Key. For information about default\n *          encryption, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html\">Amazon S3 default bucket encryption</a>\n *          in the <i>Amazon Simple Storage Service Developer Guide</i>. For more information about S3 Bucket Keys,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html\">Amazon S3 Bucket Keys</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <important>\n *             <p>This operation requires AWS Signature Version 4. For more information, see <a href=\"sig-v4-authenticating-requests.html\"> Authenticating Requests (AWS Signature\n *                Version 4)</a>. </p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutEncryptionConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide. </p>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html\">GetBucketEncryption</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html\">DeleteBucketEncryption</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketEncryptionCommand extends $Command<\n  PutBucketEncryptionCommandInput,\n  PutBucketEncryptionCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketEncryptionCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketEncryptionCommandInput, PutBucketEncryptionCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketEncryptionCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketEncryptionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutBucketEncryptionCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketEncryptionCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutBucketEncryptionCommandOutput> {\n    return deserializeAws_restXmlPutBucketEncryptionCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"],"mappings":";AACA,SAASA,0BAA0B,QAAQ,oBAAoB;AAC/D,SACEC,gDAAgD,EAChDC,8CAA8C,QACzC,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAAC,0BAAA,0BAAAC,MAAA;EAAgDC,SAAA,CAAAF,0BAAA,EAAAC,MAAA;EAK9C;EACA;EAEA,SAAAD,2BAAqBG,KAAsC;IAA3D,IAAAC,KAAA;IACE;IACAH,MAAA,CAAAI,IAAA,MAAO;IAFYD,KAAA,CAAAD,KAAK,GAALA,KAAK;;IAGxB;EACF;EAEA;;;EAGAH,0BAAA,CAAAM,SAAA,CAAAC,iBAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACf,cAAc,CAACY,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAAChB,uBAAuB,CAACa,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,IAAAM,MAAM,GAAKR,aAAa,CAAAQ,MAAlB;IACd,IAAMC,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,4BAA4B;IAChD,IAAMC,uBAAuB,GAA4B;MACvDH,MAAM,EAAAA,MAAA;MACNC,UAAU,EAAAA,UAAA;MACVC,WAAW,EAAAA,WAAA;MACXE,uBAAuB,EAAE5B,0BAA0B,CAAC6B,kBAAkB;MACtEC,wBAAwB,EAAE,SAAAA,CAACC,MAAW;QAAK,OAAAA,MAAM;MAAN;KAC5C;IACO,IAAAC,cAAc,GAAKhB,aAAa,CAAAgB,cAAlB;IACtB,OAAOV,KAAK,CAACW,OAAO,CAClB,UAACC,OAAsC;MACrC,OAAAF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEjB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxEU,uBAAuB,CACxB;EACH,CAAC;EAEOpB,0BAAA,CAAAM,SAAA,CAAAO,SAAS,GAAjB,UAAkBV,KAAsC,EAAE0B,OAAuB;IAC/E,OAAOlC,8CAA8C,CAACQ,KAAK,EAAE0B,OAAO,CAAC;EACvE,CAAC;EAEO7B,0BAAA,CAAAM,SAAA,CAAAQ,WAAW,GAAnB,UAAoBU,MAAsB,EAAEK,OAAuB;IACjE,OAAOnC,gDAAgD,CAAC8B,MAAM,EAAEK,OAAO,CAAC;EAC1E,CAAC;EAIH,OAAA7B,0BAAC;AAAD,CAAC,CAvD+CD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}