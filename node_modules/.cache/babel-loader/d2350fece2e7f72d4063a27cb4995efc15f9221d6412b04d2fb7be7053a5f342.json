{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read, __spread, __values } from \"tslib\";\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nvar LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5\n};\nexport var LOG_TYPE;\n(function (LOG_TYPE) {\n  LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n  LOG_TYPE[\"ERROR\"] = \"ERROR\";\n  LOG_TYPE[\"INFO\"] = \"INFO\";\n  LOG_TYPE[\"WARN\"] = \"WARN\";\n  LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\nvar ConsoleLogger = /** @class */function () {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  function ConsoleLogger(name, level) {\n    if (level === void 0) {\n      level = LOG_TYPE.WARN;\n    }\n    this.name = name;\n    this.level = level;\n    this._pluggables = [];\n  }\n  ConsoleLogger.prototype._padding = function (n) {\n    return n < 10 ? '0' + n : '' + n;\n  };\n  ConsoleLogger.prototype._ts = function () {\n    var dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  };\n  ConsoleLogger.prototype.configure = function (config) {\n    if (!config) return this._config;\n    this._config = config;\n    return this._config;\n  };\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {LOG_TYPE|string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype._log = function (type) {\n    var e_1, _a;\n    var msg = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      msg[_i - 1] = arguments[_i];\n    }\n    var logger_level_name = this.level;\n    if (ConsoleLogger.LOG_LEVEL) {\n      logger_level_name = ConsoleLogger.LOG_LEVEL;\n    }\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      logger_level_name = window.LOG_LEVEL;\n    }\n    var logger_level = LOG_LEVELS[logger_level_name];\n    var type_level = LOG_LEVELS[type];\n    if (!(type_level >= logger_level)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n    var log = console.log.bind(console);\n    if (type === LOG_TYPE.ERROR && console.error) {\n      log = console.error.bind(console);\n    }\n    if (type === LOG_TYPE.WARN && console.warn) {\n      log = console.warn.bind(console);\n    }\n    var prefix = \"[\" + type + \"] \" + this._ts() + \" \" + this.name;\n    var message = '';\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      message = prefix + \" - \" + msg[0];\n      log(message);\n    } else if (msg.length === 1) {\n      message = prefix + \" \" + msg[0];\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      var obj = msg.slice(1);\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n      message = prefix + \" - \" + msg[0] + \" \" + obj;\n      log(prefix + \" - \" + msg[0], obj);\n    } else {\n      message = prefix + \" \" + msg;\n      log(prefix, msg);\n    }\n    try {\n      for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var plugin = _c.value;\n        var logEvent = {\n          message: message,\n          timestamp: Date.now()\n        };\n        plugin.pushLogs([logEvent]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.log = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n  };\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.info = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread([LOG_TYPE.INFO], msg));\n  };\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.warn = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread([LOG_TYPE.WARN], msg));\n  };\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.error = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread([LOG_TYPE.ERROR], msg));\n  };\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.debug = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread([LOG_TYPE.DEBUG], msg));\n  };\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.verbose = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread([LOG_TYPE.VERBOSE], msg));\n  };\n  ConsoleLogger.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n      this._pluggables.push(pluggable);\n      pluggable.configure(this._config);\n    }\n  };\n  ConsoleLogger.prototype.listPluggables = function () {\n    return this._pluggables;\n  };\n  ConsoleLogger.LOG_LEVEL = null;\n  return ConsoleLogger;\n}();\nexport { ConsoleLogger };","map":{"version":3,"names":["AWS_CLOUDWATCH_CATEGORY","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","LOG_TYPE","ConsoleLogger","name","level","_pluggables","prototype","_padding","n","_ts","dt","Date","getMinutes","getSeconds","join","getMilliseconds","configure","config","_config","_log","type","msg","_i","arguments","length","logger_level_name","LOG_LEVEL","window","logger_level","type_level","log","console","bind","error","warn","prefix","message","obj","slice","_b","__values","_c","next","done","plugin","value","logEvent","timestamp","now","pushLogs","apply","__spread","info","debug","verbose","addPluggable","pluggable","getCategoryName","push","listPluggables"],"sources":["C:\\Users\\sinch\\node_modules\\@aws-amplify\\core\\src\\Logger\\ConsoleLogger.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { InputLogEvent } from '@aws-sdk/client-cloudwatch-logs';\nimport { LoggingProvider } from '../types';\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nimport { Logger } from './logger-interface';\n\nconst LOG_LEVELS = {\n\tVERBOSE: 1,\n\tDEBUG: 2,\n\tINFO: 3,\n\tWARN: 4,\n\tERROR: 5,\n};\n\nexport enum LOG_TYPE {\n\tDEBUG = 'DEBUG',\n\tERROR = 'ERROR',\n\tINFO = 'INFO',\n\tWARN = 'WARN',\n\tVERBOSE = 'VERBOSE',\n}\n\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger implements Logger {\n\tname: string;\n\tlevel: LOG_TYPE | string;\n\tprivate _pluggables: LoggingProvider[];\n\tprivate _config: object;\n\n\t/**\n\t * @constructor\n\t * @param {string} name - Name of the logger\n\t */\n\tconstructor(name: string, level: LOG_TYPE | string = LOG_TYPE.WARN) {\n\t\tthis.name = name;\n\t\tthis.level = level;\n\t\tthis._pluggables = [];\n\t}\n\n\tstatic LOG_LEVEL = null;\n\n\t_padding(n) {\n\t\treturn n < 10 ? '0' + n : '' + n;\n\t}\n\n\t_ts() {\n\t\tconst dt = new Date();\n\t\treturn (\n\t\t\t[this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(\n\t\t\t\t':'\n\t\t\t) +\n\t\t\t'.' +\n\t\t\tdt.getMilliseconds()\n\t\t);\n\t}\n\n\tconfigure(config?: object) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = config;\n\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Write log\n\t * @method\n\t * @memeberof Logger\n\t * @param {LOG_TYPE|string} type - log type, default INFO\n\t * @param {string|object} msg - Logging message or object\n\t */\n\t_log(type: LOG_TYPE | string, ...msg) {\n\t\tlet logger_level_name = this.level;\n\t\tif (ConsoleLogger.LOG_LEVEL) {\n\t\t\tlogger_level_name = ConsoleLogger.LOG_LEVEL;\n\t\t}\n\t\tif (typeof (<any>window) !== 'undefined' && (<any>window).LOG_LEVEL) {\n\t\t\tlogger_level_name = (<any>window).LOG_LEVEL;\n\t\t}\n\t\tconst logger_level = LOG_LEVELS[logger_level_name];\n\t\tconst type_level = LOG_LEVELS[type];\n\t\tif (!(type_level >= logger_level)) {\n\t\t\t// Do nothing if type is not greater than or equal to logger level (handle undefined)\n\t\t\treturn;\n\t\t}\n\n\t\tlet log = console.log.bind(console);\n\t\tif (type === LOG_TYPE.ERROR && console.error) {\n\t\t\tlog = console.error.bind(console);\n\t\t}\n\t\tif (type === LOG_TYPE.WARN && console.warn) {\n\t\t\tlog = console.warn.bind(console);\n\t\t}\n\n\t\tconst prefix = `[${type}] ${this._ts()} ${this.name}`;\n\t\tlet message = '';\n\n\t\tif (msg.length === 1 && typeof msg[0] === 'string') {\n\t\t\tmessage = `${prefix} - ${msg[0]}`;\n\t\t\tlog(message);\n\t\t} else if (msg.length === 1) {\n\t\t\tmessage = `${prefix} ${msg[0]}`;\n\t\t\tlog(prefix, msg[0]);\n\t\t} else if (typeof msg[0] === 'string') {\n\t\t\tlet obj = msg.slice(1);\n\t\t\tif (obj.length === 1) {\n\t\t\t\tobj = obj[0];\n\t\t\t}\n\t\t\tmessage = `${prefix} - ${msg[0]} ${obj}`;\n\t\t\tlog(`${prefix} - ${msg[0]}`, obj);\n\t\t} else {\n\t\t\tmessage = `${prefix} ${msg}`;\n\t\t\tlog(prefix, msg);\n\t\t}\n\n\t\tfor (const plugin of this._pluggables) {\n\t\t\tconst logEvent: InputLogEvent = { message, timestamp: Date.now() };\n\t\t\tplugin.pushLogs([logEvent]);\n\t\t}\n\t}\n\n\t/**\n\t * Write General log. Default to INFO\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tlog(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write INFO log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tinfo(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write WARN log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\twarn(...msg) {\n\t\tthis._log(LOG_TYPE.WARN, ...msg);\n\t}\n\n\t/**\n\t * Write ERROR log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\terror(...msg) {\n\t\tthis._log(LOG_TYPE.ERROR, ...msg);\n\t}\n\n\t/**\n\t * Write DEBUG log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tdebug(...msg) {\n\t\tthis._log(LOG_TYPE.DEBUG, ...msg);\n\t}\n\n\t/**\n\t * Write VERBOSE log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tverbose(...msg) {\n\t\tthis._log(LOG_TYPE.VERBOSE, ...msg);\n\t}\n\n\taddPluggable(pluggable: LoggingProvider) {\n\t\tif (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\tpluggable.configure(this._config);\n\t\t}\n\t}\n\n\tlistPluggables() {\n\t\treturn this._pluggables;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}